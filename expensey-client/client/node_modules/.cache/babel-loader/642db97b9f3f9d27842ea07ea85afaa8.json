{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client /client/src/landing.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './landing.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst Landing = () => {\n  var login = login => {\n    //Getting the email and pword that user entered into the field\n    var email = document.getElementsByClassName(\"emailAddress\")[0].value;\n    var pword = document.getElementsByClassName(\"pword\")[0].value;\n    validateLogin(email, pword);\n  };\n\n  var createAccountExpand = createAccountExpand => {\n    //revealing create account elements\n    var elems = document.getElementsByClassName(\"createAccount\");\n\n    for (var i = 0; i < elems.length; i++) {\n      elems[i].style.visibility = \"visible\";\n      elems[i].style.height = \"auto\";\n    } //Hiding login elements\n\n\n    var elems = document.getElementsByClassName(\"preCreate\");\n\n    for (var i = 0; i < elems.length; i++) {\n      elems[i].style.visibility = \"hidden\";\n      elems[i].style.height = \"0\";\n    }\n  };\n\n  var createAccount = createAccount => {\n    //Getting data from form\n    var username = document.getElementsByClassName(\"username\")[0].value;\n    var email = document.getElementsByClassName(\"emailAddress\")[0].value;\n    var emailConf = document.getElementsByClassName(\"emailAddressConf\")[0].value;\n    var pword = document.getElementsByClassName(\"pword\")[0].value;\n    var pwordConf = document.getElementsByClassName(\"pwordConf\")[0].value;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: Date.now(),\n        username: username,\n        email: email,\n        password: pword\n      })\n    };\n\n    if (newAccountValidation(email, emailConf, pword, pwordConf)) {\n      fetch('http://localhost:9000/users/adduser', requestOptions).then(res => res.json()).then(data => {\n        if (data == \"Account created successfully\") {\n          //reloads window to login screen\n          window.location.reload();\n        }\n      }).catch(error => console.log(error));\n    }\n  };\n\n  function validateLogin(email, pword) {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: Date.now(),\n        username: username,\n        email: email,\n        password: pword\n      })\n    };\n    var email = document.getElementsByClassName(\"emailAddress\")[0].value;\n    var pword = document.getElementsByClassName(\"pword\")[0].value;\n  }\n\n  function displayErrMsg(i) {\n    var errorMessages = [\"Either the email address or password are incorrect. Please retry.\", \"Account already exist with this email address.\", \"Please check to make sure the email addresses and passwords match!\", \"One or more fields are empty.\"];\n    var elem = document.getElementsByClassName(\"errorMessage\")[0];\n    elem.innerHTML = errorMessages[i];\n    elem.style.visibility = \"visible\";\n    elem.style.height = \"auto\";\n  }\n\n  function newAccountValidation(email, emailConf, pword, pwordconf) {\n    if (email != emailConf || pword != pwordconf) {\n      displayErrMsg(2);\n      return false;\n    } else if (email == \"\" || pword == \"\") {\n      displayErrMsg(3);\n      return false;\n    } else if (\n    /* call to see if account with email address already exist*/\n    1 == 2) {\n      //uncomment when elseif works\n      displayErrMsg(1);\n      return false;\n    } else {\n      //TODO  Contact api and create new db entry\n      return true;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"emailAddress\",\n    type: \"text\",\n    onChange: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"createAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"Confirm Email Address\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"emailAddressConf\",\n    type: \"text\",\n    onChange: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"createAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"username\",\n    type: \"text\",\n    onChange: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"createAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, \"Confirm Username\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"usernameConf\",\n    type: \"text\",\n    onChange: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"pword\",\n    type: \"text\",\n    onChange: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"createAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"pwordConf\",\n    type: \"text\",\n    onChange: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: login,\n    class: \"preCreate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createAccountExpand,\n    class: \"preCreate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createAccount,\n    class: \"createAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, \"Create\"));\n};\n\nexport default Landing;","map":{"version":3,"sources":["/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client /client/src/landing.js"],"names":["React","ReactDOM","serviceWorker","Landing","login","email","document","getElementsByClassName","value","pword","validateLogin","createAccountExpand","elems","i","length","style","visibility","height","createAccount","username","emailConf","pwordConf","requestOptions","method","headers","body","JSON","stringify","id","Date","now","password","newAccountValidation","fetch","then","res","json","data","window","location","reload","catch","error","console","log","displayErrMsg","errorMessages","elem","innerHTML","pwordconf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,eAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAEpB,MAAIC,KAAK,GAAGA,KAAK,IAAI;AACnB;AACA,QAAIC,KAAK,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDC,KAA/D;AACA,QAAIC,KAAK,GAAGH,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,EAAyC,CAAzC,EAA4CC,KAAxD;AACAE,IAAAA,aAAa,CAACL,KAAD,EAAOI,KAAP,CAAb;AACD,GALD;;AAOA,MAAIE,mBAAmB,GAAGA,mBAAmB,IAAI;AAC/C;AACA,QAAIC,KAAK,GAAGN,QAAQ,CAACC,sBAAT,CAAgC,eAAhC,CAAZ;;AACA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAmCD,CAAC,EAApC,EAAyC;AACvCD,MAAAA,KAAK,CAACC,CAAD,CAAL,CAASE,KAAT,CAAeC,UAAf,GAA4B,SAA5B;AACAJ,MAAAA,KAAK,CAACC,CAAD,CAAL,CAASE,KAAT,CAAeE,MAAf,GAAwB,MAAxB;AACD,KAN8C,CAO/C;;;AACA,QAAIL,KAAK,GAAGN,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAAZ;;AACA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAmCD,CAAC,EAApC,EAAyC;AACvCD,MAAAA,KAAK,CAACC,CAAD,CAAL,CAASE,KAAT,CAAeC,UAAf,GAA4B,QAA5B;AACAJ,MAAAA,KAAK,CAACC,CAAD,CAAL,CAASE,KAAT,CAAeE,MAAf,GAAwB,GAAxB;AACD;AACF,GAbD;;AAeA,MAAIC,aAAa,GAAGA,aAAa,IAAI;AACnC;AACA,QAAIC,QAAQ,GAAGb,QAAQ,CAACC,sBAAT,CAAgC,UAAhC,EAA4C,CAA5C,EAA+CC,KAA9D;AACA,QAAIH,KAAK,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDC,KAA/D;AACA,QAAIY,SAAS,GAAGd,QAAQ,CAACC,sBAAT,CAAgC,kBAAhC,EAAoD,CAApD,EAAuDC,KAAvE;AACA,QAAIC,KAAK,GAAGH,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,EAAyC,CAAzC,EAA4CC,KAAxD;AACA,QAAIa,SAAS,GAAGf,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,EAA6C,CAA7C,EAAgDC,KAAhE;AAEA,UAAMc,cAAc,GACpB;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFX;AAKEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADe;AAEnBX,QAAAA,QAAQ,EAAEA,QAFS;AAGnBd,QAAAA,KAAK,EAAGA,KAHW;AAInB0B,QAAAA,QAAQ,EAAEtB;AAJS,OAAf;AALR,KADA;;AAaE,QAAIuB,oBAAoB,CAAC3B,KAAD,EAAQe,SAAR,EAAoBX,KAApB,EAA2BY,SAA3B,CAAxB,EAA+D;AAC7DY,MAAAA,KAAK,CAAC,qCAAD,EAAuCX,cAAvC,CAAL,CACGY,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAESG,IAAI,IACT;AACE,YAAIA,IAAI,IAAI,8BAAZ,EAA4C;AAC1C;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,OARL,EASGC,KATH,CASSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CATlB;AAUD;AACJ,GAjCD;;AAmCA,WAAShC,aAAT,CAAuBL,KAAvB,EAA8BI,KAA9B,EAAqC;AACnC,UAAMa,cAAc,GACpB;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFX;AAKEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADe;AAEnBX,QAAAA,QAAQ,EAAEA,QAFS;AAGnBd,QAAAA,KAAK,EAAGA,KAHW;AAInB0B,QAAAA,QAAQ,EAAEtB;AAJS,OAAf;AALR,KADA;AAaA,QAAIJ,KAAK,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDC,KAA/D;AACA,QAAIC,KAAK,GAAGH,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,EAAyC,CAAzC,EAA4CC,KAAxD;AAED;;AAED,WAASqC,aAAT,CAAuBhC,CAAvB,EAA0B;AACxB,QAAIiC,aAAa,GAAG,CAClB,mEADkB,EAElB,gDAFkB,EAGlB,oEAHkB,EAInB,+BAJmB,CAApB;AAMA,QAAIC,IAAI,GAAGzC,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,CAAX;AAEAwC,IAAAA,IAAI,CAACC,SAAL,GAAiBF,aAAa,CAACjC,CAAD,CAA9B;AACAkC,IAAAA,IAAI,CAAChC,KAAL,CAAWC,UAAX,GAAwB,SAAxB;AACA+B,IAAAA,IAAI,CAAChC,KAAL,CAAWE,MAAX,GAAoB,MAApB;AACD;;AAED,WAASe,oBAAT,CAA8B3B,KAA9B,EAAqCe,SAArC,EAAiDX,KAAjD,EAAwDwC,SAAxD,EAAmE;AACjE,QAAI5C,KAAK,IAAKe,SAAV,IAAwBX,KAAK,IAAIwC,SAArC,EAA+C;AAC7CJ,MAAAA,aAAa,CAAC,CAAD,CAAb;AACA,aAAO,KAAP;AACD,KAHD,MAIK,IAAIxC,KAAK,IAAI,EAAT,IAAeI,KAAK,IAAI,EAA5B,EAAgC;AACnCoC,MAAAA,aAAa,CAAC,CAAD,CAAb;AACA,aAAO,KAAP;AACD,KAHI,MAIA;AAAI;AAA8D,SAAG,CAArE,EAAuE;AAC1E;AACAA,MAAAA,aAAa,CAAC,CAAD,CAAb;AACA,aAAO,KAAP;AACD,KAJI,MAKD;AACF;AACA,aAAO,IAAP;AACD;AACF;;AACC,sBACI;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,KAAK,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,eAGI;AAAM,IAAA,QAAQ,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAC,cAAb;AAA4B,IAAA,IAAI,EAAC,MAAjC;AAAwC,IAAA,QAAQ,EAAC,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAHJ,eAQI;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAM,IAAA,QAAQ,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAC,kBAAb;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,QAAQ,EAAC,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,CARJ,eAgBI;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,IAAA,QAAQ,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAC,UAAb;AAAwB,IAAA,IAAI,EAAC,MAA7B;AAAoC,IAAA,QAAQ,EAAC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,CAhBJ,eAwBI;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAM,IAAA,QAAQ,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAC,cAAb;AAA4B,IAAA,IAAI,EAAC,MAAjC;AAAwC,IAAA,QAAQ,EAAC,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,CAxBJ,eAgCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhCJ,eAiCI;AAAM,IAAA,QAAQ,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAC,OAAb;AAAqB,IAAA,IAAI,EAAC,MAA1B;AAAiC,IAAA,QAAQ,EAAC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAjCJ,eAsCI;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAM,IAAA,QAAQ,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAC,WAAb;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAqC,IAAA,QAAQ,EAAC,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,CAtCJ,eA8CI;AAAQ,IAAA,OAAO,EAAEzC,KAAjB;AAAwB,IAAA,KAAK,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA9CJ,eA+CI;AAAQ,IAAA,OAAO,EAAEO,mBAAjB;AAAsC,IAAA,KAAK,EAAC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA/CJ,eAgDI;AAAQ,IAAA,OAAO,EAAEO,aAAjB;AAAgC,IAAA,KAAK,EAAC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhDJ,CADJ;AAoDH,CAnKD;;AAqKA,eAAef,OAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './landing.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst Landing = () => {\n\n  var login = login => {\n    //Getting the email and pword that user entered into the field\n    var email = document.getElementsByClassName(\"emailAddress\")[0].value\n    var pword = document.getElementsByClassName(\"pword\")[0].value\n    validateLogin(email,pword);\n  };\n\n  var createAccountExpand = createAccountExpand => {\n    //revealing create account elements\n    var elems = document.getElementsByClassName(\"createAccount\");\n    for (var i = 0; i < elems.length;  i++)  {\n      elems[i].style.visibility = \"visible\";\n      elems[i].style.height = \"auto\";\n    }\n    //Hiding login elements\n    var elems = document.getElementsByClassName(\"preCreate\");\n    for (var i = 0; i < elems.length;  i++)  {\n      elems[i].style.visibility = \"hidden\";\n      elems[i].style.height = \"0\";\n    }\n  };\n\n  var createAccount = createAccount => {\n    //Getting data from form\n    var username = document.getElementsByClassName(\"username\")[0].value\n    var email = document.getElementsByClassName(\"emailAddress\")[0].value\n    var emailConf = document.getElementsByClassName(\"emailAddressConf\")[0].value\n    var pword = document.getElementsByClassName(\"pword\")[0].value\n    var pwordConf = document.getElementsByClassName(\"pwordConf\")[0].value\n\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: Date.now(),\n        username: username,\n        email : email,\n        password: pword\n      })};\n\n      if (newAccountValidation(email, emailConf,  pword, pwordConf)) {\n        fetch('http://localhost:9000/users/adduser',requestOptions) \n          .then(res => res.json())\n          .then (data => \n            {\n              if (data == \"Account created successfully\") {\n                //reloads window to login screen\n                window.location.reload();\n              }\n            })\n          .catch(error => console.log(error));\n      }\n  };\n\n  function validateLogin(email, pword) {\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: Date.now(),\n        username: username,\n        email : email,\n        password: pword\n      })};\n\n    var email = document.getElementsByClassName(\"emailAddress\")[0].value;\n    var pword = document.getElementsByClassName(\"pword\")[0].value\n    \n  }\n\n  function displayErrMsg(i) {\n    var errorMessages = [\n      \"Either the email address or password are incorrect. Please retry.\",\n      \"Account already exist with this email address.\",\n      \"Please check to make sure the email addresses and passwords match!\",\n     \"One or more fields are empty.\"\n    ];\n    var elem = document.getElementsByClassName(\"errorMessage\")[0];\n    \n    elem.innerHTML = errorMessages[i];\n    elem.style.visibility = \"visible\";\n    elem.style.height = \"auto\";\n  }\n\n  function newAccountValidation(email, emailConf,  pword, pwordconf) {\n    if (email  != emailConf  || pword != pwordconf){\n      displayErrMsg(2);\n      return false;\n    }\n    else if (email == \"\" || pword == \"\") {\n      displayErrMsg(3);\n      return false;\n    }\n    else if (/* call to see if account with email address already exist*/  1==2){\n      //uncomment when elseif works\n      displayErrMsg(1);\n      return false;\n    }\n    else{\n      //TODO  Contact api and create new db entry\n      return true;\n    }\n  }\n    return (\n        <div class=\"login\">\n          <p class=\"errorMessage\"></p> \n            <h2>Email Address</h2>\n            <form onSubmit=\"\">\n              <label>\n                <input class=\"emailAddress\" type=\"text\" onChange=\"\" />\n              </label>\n            </form>\n            <div class=\"createAccount\">\n              <h2>Confirm Email Address</h2>\n              <form onSubmit=\"\">\n                <label>\n                  <input class=\"emailAddressConf\" type=\"text\" onChange=\"\" />\n                </label>\n              </form>\n            </div>\n            <div class=\"createAccount\">\n              <h2>Username</h2>\n              <form onSubmit=\"\">\n                <label>\n                  <input class=\"username\" type=\"text\" onChange=\"\" />\n                </label>\n              </form>\n            </div>\n            <div class=\"createAccount\">\n              <h2>Confirm Username</h2>\n              <form onSubmit=\"\">\n                <label>\n                  <input class=\"usernameConf\" type=\"text\" onChange=\"\" />\n                </label>\n              </form>\n            </div>\n            <h2>Password</h2>\n            <form onSubmit=\"\">\n              <label>\n                <input class=\"pword\" type=\"text\" onChange=\"\" />\n              </label>\n            </form>\n            <div class=\"createAccount\">\n              <h2>Confirm Password</h2>\n              <form onSubmit=\"\">\n                <label>\n                  <input class=\"pwordConf\" type=\"text\" onChange=\"\" />\n                </label>\n              </form>\n            </div>\n            <button onClick={login} class=\"preCreate\">Login</button>\n            <button onClick={createAccountExpand} class=\"preCreate\">Sign up</button>\n            <button onClick={createAccount} class=\"createAccount\">Create</button>\n        </div>\n    );\n}\n\nexport default Landing;\n\n\n"]},"metadata":{},"sourceType":"module"}