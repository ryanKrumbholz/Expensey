{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client/client/src/components/table.js\";\nimport React, { Component } from 'react';\nimport ExpenseCard from './expense_card';\nimport './table.css';\n\nclass Table extends Component {\n  constructor(...args) {\n    super(...args);\n    this.expenseCardList = [];\n    this.emptyCardLsContent = /*#__PURE__*/React.createElement(\"div\", {\n      class: \"emptyCardList\",\n      onClick: props.toggleWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 29\n      }\n    }, \"Create new expense\"));\n\n    this.populateSelectList = ls => {\n      var selectLs = [];\n\n      for (var i = 0; i < ls.length; i++) {\n        selectLs.push( /*#__PURE__*/React.createElement(\"option\", {\n          class: \"selectli\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }\n        }, ls[i]));\n      }\n\n      return selectLs;\n    };\n\n    this.sortByCat = async () => {\n      function helper() {\n        //sorts through expenses and pushes applicable expense to cardLs\n        for (var i = 0; i < expensesLocal.length; i++) {\n          if (expensesLocal[i].category === currCat) {\n            sortedExpenses.push(expensesLocal[i]);\n          }\n        }\n      }\n\n      var select = document.getElementsByClassName('catList')[0];\n      var currCat;\n      var sortedExpenses = [];\n\n      if (select.options) {\n        //gets current selected category\n        currCat = select.options[select.selectedIndex].text;\n      }\n\n      var expensesLocal = await props.expenses;\n      helper();\n\n      if (sortedExpenses.length == 0) {\n        expensesLocal = await expenses;\n        helper();\n      }\n\n      expenseCardList = [];\n\n      if (currCat === 'Select Category') {\n        //resets back to full list of expenses when default option selected\n        populateExpenseCards(expenses);\n      } else {\n        populateExpenseCards(sortedExpenses);\n      }\n\n      props.setExpenses(sortedExpenses);\n    };\n\n    this.sortByCC = async () => {\n      function helper() {\n        for (var i = 0; i < expensesLocal.length; i++) {\n          if (expensesLocal[i].ccData === currCC) {\n            sortedExpenses.push(expensesLocal[i]);\n          }\n        }\n      }\n\n      var select = document.getElementsByClassName('ccList')[0];\n      var currCC;\n      var sortedExpenses = [];\n\n      if (select.options) {\n        currCC = select.options[select.selectedIndex].text;\n      }\n\n      var expensesLocal = await props.expenses;\n      helper();\n\n      if (sortedExpenses.length == 0) {\n        expensesLocal = await expenses;\n        helper();\n      }\n\n      expenseCardList = [];\n\n      if (currCC === 'Select Category') {\n        //resets back to full list of expenses when default option selected\n        populateExpenseCards(expenses);\n      } else {\n        populateExpenseCards(sortedExpenses);\n      }\n\n      props.setExpenses(sortedExpenses);\n    };\n\n    this.sortByTag = async () => {\n      function helper() {\n        for (var i = 0; i < expensesLocal.length; i++) {\n          if (expensesLocal[i].tag === currTag) {\n            sortedExpenses.push(expensesLocal[i]);\n          }\n        }\n      }\n\n      var select = document.getElementsByClassName('tagList')[0];\n      var currTag;\n      var sortedExpenses = [];\n\n      if (select.options) {\n        currTag = select.options[select.selectedIndex].text;\n      }\n\n      var expensesLocal = await props.expenses;\n      helper();\n\n      if (sortedExpenses.length == 0) {\n        expensesLocal = await expenses;\n        helper();\n      }\n\n      expenseCardList = [];\n\n      if (currTag === 'Select Tag') {\n        //resets back to full list of expenses when default option selected\n        populateExpenseCards(expenses);\n      } else {\n        populateExpenseCards(sortedExpenses);\n      }\n\n      props.setExpenses(sortedExpenses);\n    };\n\n    this.sortByMerch = async () => {\n      function helper() {\n        for (var i = 0; i < expensesLocal.length; i++) {\n          if (expensesLocal[i].merchant.toUpperCase() === input.toUpperCase()) {\n            sortedExpenses.push(expensesLocal[i]);\n          }\n        }\n      }\n\n      var input = document.getElementsByClassName('merchIn')[0].value;\n      var sortedExpenses = [];\n      var expensesLocal = await props.expenses;\n      helper();\n\n      if (sortedExpenses.length == 0) {\n        expensesLocal = await expenses;\n        helper();\n      }\n\n      expenseCardList = [];\n\n      if (input === '') {\n        //resets back to full list of expenses when default option selected\n        populateExpenseCards(expenses);\n      } else {\n        populateExpenseCards(sortedExpenses);\n      }\n\n      props.setExpenses(sortedExpenses);\n    };\n\n    this.sortByDate = async () => {\n      function helper() {\n        for (var i = 0; i < expensesLocal.length; i++) {\n          if (expensesLocal[i].dateNum >= lowerBound || expensesLocal[i].dateNum <= upperBound) {\n            sortedExpenses.push(expensesLocal[i]);\n          }\n        }\n      }\n\n      var lowerBound = document.getElementsByClassName('dateFrom')[0].valueAsNumber;\n      var upperBound = document.getElementsByClassName('dateTo')[0].valueAsNumber;\n      var sortedExpenses = [];\n      var expensesLocal = await props.expenses;\n      helper();\n\n      if (sortedExpenses.length == 0) {\n        expensesLocal = await expenses;\n        helper();\n      }\n\n      populateExpenseCards(sortedExpenses);\n      props.setExpenses(sortedExpenses);\n    };\n\n    this.getCookie = cname => {\n      var name = cname + \"=\";\n      var decodedCookie = decodeURIComponent(document.cookie);\n      var ca = decodedCookie.split(';');\n\n      for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n\n        while (c.charAt(0) == ' ') {\n          c = c.substring(1);\n        }\n\n        if (c.indexOf(name) == 0) {\n          return c.substring(name.length, c.length);\n        }\n      }\n\n      return \"\";\n    };\n\n    this.expenses = fetchExpenses();\n  }\n\n  async fetchListData(expenses) {\n    var expenses = await expenses;\n\n    function fetchCatList(expenses) {\n      var catList = listData().getCatList();\n\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]) {\n            var currExpenseCat = expenses[i].category;\n\n            if (!catList.includes(currExpenseCat)) {\n              catList.push(currExpenseCat);\n            }\n          }\n        }\n      }\n\n      if (catList.length > props.catList.length && catList[0]) {\n        //prevents infinite re-rendering\n        props.setCatList(catList);\n      }\n    }\n\n    function fetchCcList(expenses) {\n      var ccList = listData().getCcList();\n\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]) {\n            var currExpenseCc = expenses[i].ccData;\n\n            if (!ccList.includes(currExpenseCc)) {\n              ccList.push(currExpenseCc);\n            }\n          }\n        }\n      }\n\n      if (ccList.length > props.ccList && ccList[0]) {\n        //prevents infinite re-rendering\n        props.setCcList(ccList);\n      }\n    }\n\n    function fetchTagList(expenses) {\n      var tagList = listData().getTagList();\n\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]) {\n            var currExpenseTag = expenses[i].tag;\n\n            if (!tagList.includes(currExpenseTag)) {\n              tagList.push(currExpenseTag);\n            }\n          }\n        }\n      }\n\n      if (tagList.length > props.tagList && tagList[0]) {\n        //prevents infinite re-rendering\n        props.setTagList(tagList);\n      }\n    }\n\n    function fetchAllList(expenses) {\n      fetchCatList(expenses);\n      fetchCcList(expenses);\n      fetchTagList(expenses);\n    }\n\n    fetchAllList(expenses);\n  }\n\n  listData() {\n    var tagList = [];\n    var categoriesList = [];\n    var ccList = [];\n    return {\n      setTagList: function (newTagList) {\n        tagList = newTagList;\n      },\n      setCatList: function (newCatList) {\n        categoriesList = newCatList;\n      },\n      setCcList: function (newCcList) {\n        ccList = newCcList;\n      },\n      getCatList: function () {\n        return categoriesList;\n      },\n      getCcList: function () {\n        return ccList;\n      },\n      getTagList: function () {\n        return tagList;\n      }\n    };\n  }\n\n  filters() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"datesFiltersList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"From\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, \"From: \"), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"dateFrom\",\n      type: \"date\",\n      id: \"\",\n      name: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"To\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }\n    }, \"To: \"), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"dateTo\",\n      type: \"date\",\n      id: \"\",\n      name: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"submit\",\n      onClick: sortByDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"typeFiltersList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      class: \"merchIn\",\n      type: \"text\",\n      placeholder: \"Merchant\",\n      onChange: \"\",\n      onSubmit: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"submit\",\n      onClick: sortByMerch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"categoryTagList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      class: \"catList\",\n      onChange: sortByCat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 15\n      }\n    }, \"Select Category\"), populateSelectList(props.catList))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      class: \"ccList\",\n      onChange: sortByCC,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 15\n      }\n    }, \"Select Card\"), populateSelectList(props.ccList))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      class: \"tagList\",\n      onChange: sortByTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 15\n      }\n    }, \"Select Tag\"), populateSelectList(props.tagList)))), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"statusList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 19\n      }\n    }), \"Unreported\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    }), \"Open\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }\n    }), \"Processing\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }\n    }), \"Approved\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 17\n      }\n    }), \"Reimbursed\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }\n    }), \"Closed\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }\n    }), \"Deleted\"))));\n  }\n\n  async fetchExpenses() {\n    var userEmail = getCookie(\"email\");\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: userEmail\n      })\n    };\n    var data = await fetch('https://api.expensey.app/users/expenses', requestOptions).then(res => res.json()).then(data => {\n      return data;\n    }).catch(error => console.log(error));\n    return data;\n  }\n\n  async populateExpenseCards(expenses) {\n    var expenses = await expenses;\n\n    if (expenses) {\n      var numCards = expenses.length;\n\n      for (var i = 0; i < numCards; i++) {\n        var arr = expenses[i].date.split('-');\n        var date = arr[1] + '-' + arr[2] + '-' + arr[0];\n        expenseCardList.push( /*#__PURE__*/React.createElement(ExpenseCard, {\n          data: [date, expenses[i].merchant, expenses[i].amount, expenses[i].category, expenses[i].description, expenses[i].tag, expenses[i].receiptImgLink, expenses[i].status],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 28\n          }\n        }));\n      }\n    }\n\n    if (expenseCardList != props.currCardLs) {\n      //if statement prevents infinite re-rendering by only changing state when expenses update\n      props.setCardLs(expenseCardList);\n    }\n  }\n\n  checkState() {\n    if (props.expenses.length == 0) {\n      props.setExpenses(expenses);\n    }\n\n    if (props.currCardLs.length == 0) {\n      populateExpenseCards(expenses);\n    }\n  }\n\n  table() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"theader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      class: \"dateli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"statusli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"merchli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }\n    }, \"Merchant\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"amountli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"catli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"descli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }\n    }, \"Description\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"tbody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }\n    }, props.currCardLs != 0 ? props.currCardLs : emptyCardLsContent));\n  }\n\n  render() {\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 5\n      }\n    }, fetchListData(expenses), filters(), table());\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client/client/src/components/table.js"],"names":["React","Component","ExpenseCard","Table","expenseCardList","emptyCardLsContent","props","toggleWindow","populateSelectList","ls","selectLs","i","length","push","sortByCat","helper","expensesLocal","category","currCat","sortedExpenses","select","document","getElementsByClassName","options","selectedIndex","text","expenses","populateExpenseCards","setExpenses","sortByCC","ccData","currCC","sortByTag","tag","currTag","sortByMerch","merchant","toUpperCase","input","value","sortByDate","dateNum","lowerBound","upperBound","valueAsNumber","getCookie","cname","name","decodedCookie","decodeURIComponent","cookie","ca","split","c","charAt","substring","indexOf","fetchExpenses","fetchListData","fetchCatList","catList","listData","getCatList","currExpenseCat","includes","setCatList","fetchCcList","ccList","getCcList","currExpenseCc","setCcList","fetchTagList","tagList","getTagList","currExpenseTag","setTagList","fetchAllList","categoriesList","newTagList","newCatList","newCcList","filters","userEmail","requestOptions","method","headers","body","JSON","stringify","email","data","fetch","then","res","json","catch","error","console","log","numCards","arr","date","amount","description","receiptImgLink","status","currCardLs","setCardLs","checkState","table","render"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport ExpenseCard  from './expense_card';\nimport './table.css';\n\nclass Table extends Component {\n  expenseCardList =  [];\n  emptyCardLsContent = <div class=\"emptyCardList\" onClick={props.toggleWindow}>\n                            <h3>Create new expense</h3>\n                          </div>\n\n   async fetchListData(expenses) {\n    var expenses = await expenses;\n    function fetchCatList(expenses) {\n      var catList = listData().getCatList();\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]){\n            var currExpenseCat = expenses[i].category;\n            if (!catList.includes(currExpenseCat)) {\n              catList.push(currExpenseCat);\n            }\n          }\n        }\n      }\n      if (catList.length > props.catList.length && catList[0]) {\n        //prevents infinite re-rendering\n      props.setCatList(catList)\n      }\n    }\n\n    function fetchCcList(expenses) {\n      var ccList = listData().getCcList();\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]){\n            var currExpenseCc = expenses[i].ccData;\n            if (!ccList.includes(currExpenseCc)) {\n              ccList.push(currExpenseCc);\n            }\n          }\n        }\n      }\n      if (ccList.length > props.ccList && ccList[0]){\n        //prevents infinite re-rendering\n      props.setCcList(ccList)\n    }\n    }\n\n    function fetchTagList(expenses) {\n      var tagList = listData().getTagList();\n      if (expenses) {\n      for (var i = 0; i <= expenses.length; i++) {\n        if (expenses[i]){\n          var currExpenseTag = expenses[i].tag;\n          if (!tagList.includes(currExpenseTag)) {\n            tagList.push(currExpenseTag);\n          }\n        }\n      }\n    }\n    if (tagList.length > props.tagList && tagList[0]){\n      //prevents infinite re-rendering\n      props.setTagList(tagList)\n    }\n  }\n    function fetchAllList(expenses) {\n      fetchCatList(expenses); \n      fetchCcList(expenses); \n      fetchTagList(expenses);\n    }\n    fetchAllList(expenses);\n  }\n\n  listData (){\n    var tagList = [];\n    var categoriesList = [];\n    var ccList = [];\n\n    return {\n      setTagList : function (newTagList) {\n        tagList = newTagList;\n      },\n      setCatList : function (newCatList) {\n        categoriesList = newCatList;\n      },\n      setCcList : function (newCcList) {\n        ccList = newCcList;\n      },\n      getCatList : function () {\n        return categoriesList;\n      },\n      getCcList : function () {\n        return  ccList;\n      },\n      getTagList : function () {\n        return tagList;\n      }\n    };\n  }\n\n  populateSelectList = (ls) => {\n    var selectLs = [];\n    for(var i = 0; i < ls.length; i++) {\n      selectLs.push(<option  class=\"selectli\">{ls[i]}</option>)\n    }\n    return selectLs;\n  }\n\n  sortByCat = async () => {\n    function helper() {\n      //sorts through expenses and pushes applicable expense to cardLs\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].category === currCat) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n\n    var select = document.getElementsByClassName('catList')[0]\n    var currCat;\n    var sortedExpenses = [];\n    if (select.options) {\n      //gets current selected category\n      currCat = select.options[select.selectedIndex].text\n    }\n    var expensesLocal = await props.expenses;\n\n    helper()\n    \n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper()\n    }\n    expenseCardList = [];\n\n    if (currCat === 'Select Category'){\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses)\n    }\n    else{\n      populateExpenseCards(sortedExpenses)\n    }\n    props.setExpenses(sortedExpenses)\n  }\n\n  sortByCC = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].ccData === currCC) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n\n    var select = document.getElementsByClassName('ccList')[0]\n    var currCC;\n    var sortedExpenses = [];\n      if (select.options) {\n        currCC = select.options[select.selectedIndex].text\n      }\n\n      var expensesLocal = await props.expenses;\n    \n      helper()\n    \n      if (sortedExpenses.length == 0) {\n        expensesLocal = await expenses;\n        helper()\n      }\n\n    expenseCardList = [];\n\n    if (currCC === 'Select Category'){\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses)\n    }\n    else{\n      populateExpenseCards(sortedExpenses)\n    }\n    props.setExpenses(sortedExpenses)\n  }\n\n  sortByTag = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].tag === currTag) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n    var select = document.getElementsByClassName('tagList')[0]\n    var currTag;\n    var sortedExpenses = [];\n    if (select.options) {\n      currTag = select.options[select.selectedIndex].text\n    }\n    var expensesLocal = await props.expenses;\n    \n    helper()\n    \n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper()\n    }\n    \n    expenseCardList = [];\n\n    if (currTag === 'Select Tag'){\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses)\n    }\n    else{\n      populateExpenseCards(sortedExpenses)\n    }\n    props.setExpenses(sortedExpenses)\n  }\n\n  sortByMerch = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].merchant.toUpperCase() === input.toUpperCase()) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n    var input = document.getElementsByClassName('merchIn')[0].value\n    var sortedExpenses = [];\n    var expensesLocal = await props.expenses;\n    \n    helper()\n    \n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper()\n    }\n\n    expenseCardList = [];\n\n    if (input === ''){\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses)\n    }\n    else{\n      populateExpenseCards(sortedExpenses)\n    }\n    props.setExpenses(sortedExpenses)\n  }\n\n  sortByDate = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].dateNum >= lowerBound || expensesLocal[i].dateNum <= upperBound) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n    var lowerBound = document.getElementsByClassName('dateFrom')[0].valueAsNumber\n    var upperBound = document.getElementsByClassName('dateTo')[0].valueAsNumber\n    var sortedExpenses = [];\n    var expensesLocal = await props.expenses;\n\n    helper()\n\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper()\n    }\n\n    populateExpenseCards(sortedExpenses)\n    props.setExpenses(sortedExpenses)\n\n  }\n\n  filters () {\n    return(\n          <div className=\"filters\">\n            <ul class=\"datesFiltersList\">\n            <li>\n              <form action=\"\">\n                <label for=\"From\">From: </label>\n                <input class=\"dateFrom\" type=\"date\" id=\"\" name=\"\"/>\n              </form>\n            </li>\n            <li>\n              <form action=\"\">\n                <label for=\"To\">To: </label>\n                <input class=\"dateTo\" type=\"date\" id=\"\" name=\"\"/>\n              </form>\n              <button class=\"submit\" onClick={sortByDate}></button>\n            </li>\n          </ul>\n          <ul class=\"typeFiltersList\">\n            <li>\n                <label>\n                  <input class=\"merchIn\" type=\"text\" placeholder=\"Merchant\" onChange=\"\" onSubmit=\"\" />\n                  <button class=\"submit\" onClick={sortByMerch}></button>\n                </label>\n          </li>\n          </ul>\n          <ul class=\"categoryTagList\">\n            <li>\n              <select class=\"catList\" onChange={sortByCat}>\n              <option value=\"\" selected>Select Category</option>\n                {populateSelectList(props.catList)}\n              </select>\n            </li>\n            <li>\n              <select class=\"ccList\" onChange={sortByCC}>\n              <option value=\"\" selected>Select Card</option>\n              {populateSelectList(props.ccList)}\n              </select>\n            </li>\n            <li>\n              <select class=\"tagList\" onChange={sortByTag}>\n              <option value=\"\" selected>Select Tag</option>\n              {populateSelectList(props.tagList)}\n              </select>\n            </li>\n          </ul>\n          <ul class=\"statusList\">\n            <li>\n                <label class=\"c1\">\n                  <input type=\"checkbox\" checked=\"checked\"/>\n                  <span class=\"checkmark\"></span>\n                  Unreported\n                </label>\n            </li>\n            <li>\n              <label class=\"c2\">\n                <input type=\"checkbox\" checked=\"checked\"/>\n                <span class=\"checkmark\"></span>\n                Open\n              </label>\n            </li>\n            <li>\n              <label class=\"c3\">\n                <input type=\"checkbox\" checked=\"checked\"/>\n                <span class=\"checkmark\"></span>\n                Processing\n              </label>\n            </li>\n            <li>\n              <label class=\"c4\">\n                <input type=\"checkbox\" checked=\"checked\"/>\n                <span class=\"checkmark\"></span>\n                Approved\n              </label>\n            </li>\n            <li>\n              <label class=\"c5\">\n                <input type=\"checkbox\" checked=\"checked\"/>\n                <span class=\"checkmark\"></span>\n                Reimbursed\n              </label>\n            </li>\n            <li>\n              <label class=\"c6\">\n                <input type=\"checkbox\" checked=\"checked\"/>\n                <span class=\"checkmark\"></span>\n                Closed\n              </label>\n            </li>\n            <li>\n              <label class=\"c7\">\n                <input type=\"checkbox\"/>\n                <span class=\"checkmark\"></span>\n                Deleted\n              </label>\n            </li> \n          </ul>\n        </div>\n    )\n  }\n\n  getCookie = cname => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for(var i = 0; i <ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  }\n\n  async fetchExpenses() {\n    var userEmail = getCookie(\"email\");\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email : userEmail\n      })};\n\n      var data = await fetch('https://api.expensey.app/users/expenses',requestOptions) \n          .then(res => res.json())\n          .then (data => \n            {\n              return data\n            })\n          .catch(error => console.log(error));\n\n      return data\n      }\n\nasync populateExpenseCards (expenses) {\n  var expenses = await expenses;\n  if (expenses) {\n    var numCards = expenses.length;\n    for (var i = 0; i < numCards; i++) {\n      var arr = expenses[i].date.split('-')\n      var date = arr[1] + '-' + arr[2] + '-' + arr[0]\n      expenseCardList.push(<ExpenseCard data = {[date, expenses[i].merchant, expenses[i].amount,\n       expenses[i].category,expenses[i].description, expenses[i].tag, expenses[i].receiptImgLink, expenses[i].status]}/>)\n    }\n  }\n  if (expenseCardList != props.currCardLs){\n    //if statement prevents infinite re-rendering by only changing state when expenses update\n    props.setCardLs(expenseCardList);\n  }\n  \n  }\n\n  expenses = fetchExpenses();\n\n  checkState(){\n  if (props.expenses.length == 0) {\n    props.setExpenses(expenses);\n  }\n  \n  if (props.currCardLs.length == 0) {\n    populateExpenseCards(expenses);\n  }\n}\n\ntable (){\n    return(\n      <div class=\"table\">\n        <ul class=\"theader\">\n          <li class=\"dateli\">Date</li>\n          <li class=\"statusli\">Status</li>\n          <li class=\"merchli\">Merchant</li>\n          <li class=\"amountli\">Amount</li>\n          <li class=\"catli\">Category</li>\n          <li class=\"descli\">Description</li>\n        </ul>\n        <div class=\"tbody\">\n        {(props.currCardLs != 0) ? props.currCardLs : emptyCardLsContent }\n        </div>\n      </div>\n    );\n  }\n\n  render () {\n    <div>\n    {fetchListData(expenses)}\n      {filters()}\n      {table()}\n    </div>\n  }\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}