{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Sidebar from './components/sidebar';\nimport ExpensesBody from './components/expenses_body';\nimport Login from './login';\nimport NewExpense from './components/new_expense';\nimport './App.css';\nimport Construction from './components/construction';\nimport Settings from './components/settings_body';\nimport Footer from './components/footer';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      seen: false,\n      //state for new expense window\n      cardLs: [],\n      //state for card list\n      dkmode: false //state for dark mode\n\n    };\n\n    this.toggleWindow = () => {\n      //toggles new expense window\n      this.setState({\n        seen: !this.state.seen //sets seen to the opposite state\n\n      }, console.log(\"Window Toggled\"));\n    };\n\n    this.toggledkMode = () => {\n      //toggles dark mode\n      this.setState({\n        dkmode: !this.state.dkmode //sets dkmode  to the opposite state\n\n      }, () => console.log(\"Dark Mode toggled\"));\n    };\n\n    this.getCookie = cname => {\n      //gets cookie of given type\n      var name = cname + \"=\";\n      var decodedCookie = decodeURIComponent(document.cookie);\n      var ca = decodedCookie.split(';');\n\n      for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n\n        while (c.charAt(0) == ' ') {\n          c = c.substring(1);\n        }\n\n        if (c.indexOf(name) == 0) {\n          return c.substring(name.length, c.length);\n        }\n      }\n\n      return \"\";\n    };\n\n    this.setCardLs = cardLs => {\n      this.setState({\n        cardLs: cardLs\n      }, console.log(\"cardls updated\"));\n    };\n\n    this.getViewMode = () => {\n      var dkmode = '#121212';\n      var dktxt = 'white';\n      var dkCard = '#424242';\n      var ltmode = 'rgb(233, 233, 233)';\n      var lttxt = 'black';\n      var ltCard = 'white';\n      var dkmodeStatus = false; //ltmode by default\n\n      var txtColor = lttxt;\n      var bgColor = ltmode;\n      var cardColor = ltCard;\n      var settings = document.getElementsByClassName('settings_body')[0];\n      var expenses = document.getElementsByClassName('ExpensesBody')[0];\n      var reports = document.getElementsByClassName('reports_body')[0];\n      var account = document.getElementsByClassName('account_body')[0];\n      var expenseCard = document.getElementsByClassName('Card');\n      var emptyCardList = document.getElementsByClassName('emptyCardList')[0];\n      var newExpense = document.getElementsByClassName('window')[0]; //get dkmode status from db\n\n      var getDarkModeStatus = () => {\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: this.getCookie('email')\n          })\n        };\n\n        if (!this.getCookie('dkModeStatus')) {\n          //if dkmode cookie doesn't exist, checks db for user preference\n          fetch('https://api.expensey.app/users/user', requestOptions).then(res => res.json()).then(data => {\n            document.cookie = \"dkModeStatus=\" + data.dkModeStatus;\n          }).catch(error => console.log(error));\n        }\n      };\n\n      getDarkModeStatus();\n      dkmodeStatus = this.getCookie('dkModeStatus');\n\n      if (dkmodeStatus == 'true') {\n        txtColor = dktxt;\n        bgColor = dkmode;\n        cardColor = dkCard;\n      }\n\n      if (settings) {\n        //checks if settings is defined (sees if it is currently displayed)\n        settings.style.color = txtColor;\n        settings.style.backgroundColor = bgColor;\n      }\n\n      if (expenses) {\n        //checks if expenses is defined (sees if it is currently displayed)\n        expenses.style.color = txtColor;\n        expenses.style.backgroundColor = bgColor;\n\n        if (emptyCardList) {\n          emptyCardList.style.backgroundColor = cardColor;\n        }\n\n        if (expenseCard) {\n          for (var i = 0; i < expenseCard.length; i++) {\n            //changing style of each card elem\n            expenseCard[i].style.backgroundColor = cardColor;\n            expenseCard[i].style.color = txtColor;\n          }\n        }\n      }\n\n      if (reports) {\n        //checks if reports is defined (sees if it is currently displayed)\n        reports.style.color = txtColor;\n        reports.style.backgroundColor = bgColor;\n      }\n\n      if (account) {\n        //checks if account is defined (sees if it is currently displayed)\n        account.style.color = txtColor;\n        account.style.backgroundColor = bgColor;\n      }\n\n      if (newExpense) {\n        newExpense.style.color = txtColor;\n        newExpense.style.backgroundColor = bgColor;\n      }\n    };\n  }\n\n  componentDidMount() {\n    var mode = false;\n\n    if (this.getCookie('dkModeStatus') != mode) {\n      //if  cookie exist; prevents from having to wait on db query\n      if (this.getCookie('dkModeStatus') == 'true') {\n        mode = true;\n      }\n    }\n\n    this.setState({\n      dkmode: mode\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(\"component updated\");\n  }\n\n  render() {\n    if (this.getCookie(\"status\") == \"true\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }\n      }, this.getViewMode(), /*#__PURE__*/React.createElement(Sidebar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: ExpensesBody,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ExpensesBody, {\n        toggleWindow: this.toggleWindow,\n        currSeenState: this.state.seen,\n        currCardLs: this.state.cardLs,\n        setCardLs: this.setCardLs,\n        dkMode: this.getDarkMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }), this.state.seen ? /*#__PURE__*/React.createElement(NewExpense, {\n        toggleWindow: this.toggleWindow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 36\n        }\n      }) : null), /*#__PURE__*/React.createElement(Route, {\n        path: \"/reports\",\n        exact: true,\n        component: Construction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/settings\",\n        exact: true,\n        component: Settings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Settings, {\n        dkModeStatus: this.state.dkmode,\n        toggledkmode: this.toggledkMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        path: \"/account\",\n        exact: true,\n        component: Construction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(Login, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","Sidebar","ExpensesBody","Login","NewExpense","Construction","Settings","Footer","App","state","seen","cardLs","dkmode","toggleWindow","setState","console","log","toggledkMode","getCookie","cname","name","decodedCookie","decodeURIComponent","document","cookie","ca","split","i","length","c","charAt","substring","indexOf","setCardLs","getViewMode","dktxt","dkCard","ltmode","lttxt","ltCard","dkmodeStatus","txtColor","bgColor","cardColor","settings","getElementsByClassName","expenses","reports","account","expenseCard","emptyCardList","newExpense","getDarkModeStatus","requestOptions","method","headers","body","JSON","stringify","email","fetch","then","res","json","data","dkModeStatus","catch","error","style","color","backgroundColor","componentDidMount","mode","componentDidUpdate","render","getDarkMode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Sidebar from './components/sidebar';\nimport ExpensesBody from './components/expenses_body';\nimport Login from './login';\nimport NewExpense from './components/new_expense';\nimport './App.css';\nimport Construction from './components/construction';\nimport Settings from './components/settings_body';\nimport Footer from './components/footer';\n\nclass App extends Component {\n  state = {\n    seen: false, //state for new expense window\n    cardLs: [], //state for card list\n    dkmode: false //state for dark mode\n  };\n\ntoggleWindow = () => {\n  //toggles new expense window\n    this.setState({\n      seen: !this.state.seen //sets seen to the opposite state\n    },\n    console.log(\"Window Toggled\"))\n  }\n\ntoggledkMode =  () => {\n  //toggles dark mode\n  this.setState({\n    dkmode: !this.state.dkmode //sets dkmode  to the opposite state\n  },\n  () => console.log(\"Dark Mode toggled\")\n  )\n};\n\ngetCookie = cname => {\n  //gets cookie of given type\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for(var i = 0; i <ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nsetCardLs = cardLs => {\n  this.setState({cardLs : cardLs},\n    console.log(\"cardls updated\"));\n}\n\n\ngetViewMode = () => {\n  var dkmode = '#121212';\n  var dktxt = 'white';\n  var dkCard = '#424242'\n  var ltmode = 'rgb(233, 233, 233)';\n  var lttxt = 'black';\n  var ltCard = 'white';\n\n  var dkmodeStatus = false; //ltmode by default\n  var txtColor = lttxt;\n  var bgColor = ltmode;\n  var cardColor = ltCard;\n\n  var settings = document.getElementsByClassName('settings_body')[0];\n  var expenses = document.getElementsByClassName('ExpensesBody')[0];\n  var reports = document.getElementsByClassName('reports_body')[0];\n  var account = document.getElementsByClassName('account_body')[0];\n  var expenseCard = document.getElementsByClassName('Card');\n  var emptyCardList = document.getElementsByClassName('emptyCardList')[0];\n  var newExpense = document.getElementsByClassName('window')[0];\n\n  //get dkmode status from db\n  var getDarkModeStatus = () => {\n    const requestOptions =\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email : this.getCookie('email')\n            })};\n\n          if (!this.getCookie('dkModeStatus')){\n            //if dkmode cookie doesn't exist, checks db for user preference\n          fetch('https://api.expensey.app/users/user',requestOptions) \n              .then(res => res.json())\n              .then (data => \n                {\n                  document.cookie = \"dkModeStatus=\"+data.dkModeStatus;\n                })\n              .catch(error => console.log(error));\n          }\n}\n\n  getDarkModeStatus();\n  dkmodeStatus = this.getCookie('dkModeStatus');\n\n  if (dkmodeStatus  == 'true') {\n    txtColor = dktxt;\n    bgColor = dkmode;\n    cardColor = dkCard;\n  }\n\n  if (settings) {\n    //checks if settings is defined (sees if it is currently displayed)\n    settings.style.color = txtColor;\n    settings.style.backgroundColor = bgColor;\n  }\n  if (expenses) {\n    //checks if expenses is defined (sees if it is currently displayed)\n    expenses.style.color = txtColor;\n    expenses.style.backgroundColor = bgColor;\n    if (emptyCardList) {\n    emptyCardList.style.backgroundColor = cardColor;\n  }\n    if (expenseCard) {\n      for (var i = 0; i < expenseCard.length; i++) {\n        //changing style of each card elem\n        expenseCard[i].style.backgroundColor = cardColor;\n        expenseCard[i].style.color = txtColor;\n      }\n    }\n    \n  }\n  if (reports) {\n    //checks if reports is defined (sees if it is currently displayed)\n    reports.style.color = txtColor;\n    reports.style.backgroundColor = bgColor;\n  }\n  if  (account) {\n    //checks if account is defined (sees if it is currently displayed)\n  account.style.color = txtColor;\n  account.style.backgroundColor = bgColor;\n  }\n\n  if (newExpense) {\n    newExpense.style.color = txtColor;\n    newExpense.style.backgroundColor = bgColor;\n  }\n}\n\ncomponentDidMount() {\n  var mode = false;\n  if (this.getCookie('dkModeStatus') != mode){\n    //if  cookie exist; prevents from having to wait on db query\n      if (this.getCookie('dkModeStatus') == 'true'){\n        mode = true\n      }\n}\n  this.setState({\n    dkmode: mode\n  });\n}\n\ncomponentDidUpdate() {\n  console.log(\"component updated\")\n}\n\n\n  render () {\n    if(this.getCookie(\"status\") == \"true\"){\n      return(\n        <div class=\"App\">\n        {this.getViewMode()}\n          {/* Construction is temp for production*/}\n          {/* <Construction/> */}\n          <Sidebar/>\n          <Router>\n            <Switch>\n              <Route path=\"/\" exact component={ExpensesBody}>\n                <ExpensesBody toggleWindow = {this.toggleWindow} currSeenState = {this.state.seen} currCardLs = {this.state.cardLs} setCardLs = {this.setCardLs} dkMode = {this.getDarkMode}/> \n                {this.state.seen ? <NewExpense toggleWindow = {this.toggleWindow}/> : null}\n              </Route>\n              <Route path=\"/reports\" exact component={Construction}>\n              </Route>\n              <Route path=\"/settings\" exact component={Settings}>\n              <Settings dkModeStatus = {this.state.dkmode} toggledkmode = {this.toggledkMode}/>\n              </Route>\n              <Route path=\"/account\" exact component={Construction}>\n              </Route>\n            </Switch>\n          </Router>\n          <Footer/>\n        </div>\n    );}\n    else{\n      return(\n        <Login/>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}