{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client /client/src/App.js\";\nimport React, { Component } from 'react';\nimport Sidebar from './components/sidebar';\nimport ExpensesBody from './components/expenses_body';\nimport Landing from './landing';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: \"\"\n    };\n  }\n\n  getJson() {\n    var json = {};\n    fetch(\"http://localhost:9000/users\").then(res => {\n      return res.text();\n    }).then(data => {\n      json = data;\n      this.state.apiResponse = data;\n    });\n  }\n\n  loggedIn() {\n    //Create a t/f state to check if user is logged in or not\n    return true;\n  }\n\n  render() {\n    if (this.loggedIn()) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, this.getJson(), this.state.apiResponse, /*#__PURE__*/React.createElement(Sidebar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ExpensesBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      })) // </Router>\n      ;\n    } else {\n      return /*#__PURE__*/React.createElement(Landing, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client /client/src/App.js"],"names":["React","Component","Sidebar","ExpensesBody","Landing","BrowserRouter","Router","Route","App","constructor","props","state","apiResponse","getJson","json","fetch","then","res","text","data","loggedIn","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAC1BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAb;AACD;;AAEDC,EAAAA,OAAO,GAAI;AACT,QAAIC,IAAI,GAAG,EAAX;AACAC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACOC,IADP,CACYC,GAAG,IAAI;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KAHP,EAGSF,IAHT,CAGcG,IAAI,IAAI;AACdL,MAAAA,IAAI,GAAGK,IAAP;AACA,WAAKR,KAAL,CAAWC,WAAX,GAAyBO,IAAzB;AACD,KANP;AAQD;;AAEDC,EAAAA,QAAQ,GAAG;AACT;AACA,WAAO,IAAP;AACD;;AAEDC,EAAAA,MAAM,GAAI;AACR,QAAG,KAAKD,QAAL,EAAH,EAAmB;AAAC,0BAChB;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKP,OAAL,EADH,EAEG,KAAKF,KAAL,CAAWC,WAFd,eAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,eAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADgB,CAOlB;AAPkB;AAQjB,KARH,MASI;AACF,0BACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;AACF;;AAtCyB;;AAyC5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Sidebar from './components/sidebar';\nimport ExpensesBody from './components/expenses_body';\nimport Landing from './landing';\nimport { BrowserRouter as Router, Route} from  \"react-router-dom\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { apiResponse: \"\" };\n  }\n\n  getJson () {\n    var json = {}\n    fetch(\"http://localhost:9000/users\")\n          .then(res => {\n            return res.text()\n          }).then(data => {\n            json = data;\n            this.state.apiResponse = data;\n          });\n\n  }\n\n  loggedIn() {\n    //Create a t/f state to check if user is logged in or not\n    return true;\n  }\n\n  render () {\n    if(this.loggedIn()){return(\n        <div class=\"App\">\n          {this.getJson()}\n          {this.state.apiResponse}\n          <Sidebar/>\n          <ExpensesBody /> \n        </div>\n      // </Router>\n    );}\n    else{\n      return(\n        <Landing/>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}