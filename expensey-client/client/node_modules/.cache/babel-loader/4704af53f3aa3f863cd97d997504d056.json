{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client/client/src/login.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './login.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst Login = props => {\n  var login = () => {\n    //Getting the email and pword that user entered into the field\n    var email = document.getElementsByClassName(\"emailAddress\")[0].value;\n    var pword = document.getElementsByClassName(\"pword\")[0].value;\n    validateLogin(email, pword);\n  };\n\n  var createAccountExpand = () => {\n    //revealing create account elements\n    var elems = document.getElementsByClassName(\"createAccount\");\n\n    for (var i = 0; i < elems.length; i++) {\n      if (i == elems.length - 1) {\n        elems[i].style.height = \"4vh\";\n      } else {\n        elems[i].style.height = \"auto\";\n      }\n\n      elems[i].style.visibility = \"visible\";\n    } //Hiding login elements\n\n\n    var elems = document.getElementsByClassName(\"preCreate\");\n\n    for (var i = 0; i < elems.length; i++) {\n      elems[i].style.visibility = \"hidden\";\n      elems[i].style.height = \"0\";\n    }\n  };\n\n  var createAccount = () => {\n    //Getting data from form\n    var firstName = document.getElementsByClassName(\"firstName\")[0].value;\n    var lastName = document.getElementsByClassName(\"lastName\")[0].value;\n    var email = document.getElementsByClassName(\"emailAddress\")[0].value;\n    var emailConf = document.getElementsByClassName(\"emailAddressConf\")[0].value;\n    var pword = document.getElementsByClassName(\"pword\")[0].value;\n    var pwordConf = document.getElementsByClassName(\"pwordConf\")[0].value;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: Date.now(),\n        first_name: firstName,\n        last_name: lastName,\n        email: email,\n        password: pword\n      })\n    };\n\n    if (newAccountValidation(email, emailConf, pword, pwordConf)) {\n      fetch('https://api.expensey.app/users/adduser', requestOptions).then(res => res.json()).then(data => {\n        if (data == \"Account created successfully\") {\n          //reloads window to login screen\n          window.location.reload();\n        }\n      }).catch(error => console.log(error));\n    }\n  };\n\n  function validateLogin(email, pword) {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: pword\n      })\n    };\n    fetch('https://api.expensey.app/users/login', requestOptions).then(res => res.json()).then(data => {\n      var d = new Date();\n      d.setTime(d.getTime() + 24 * 60 * 60 * 1000);\n\n      if (data[0] == \"Account authorization successful!\") {\n        //Allows user to access their account\n        document.cookie = \"status=true; expires=\" + d.toUTCString() + \";\"; //reloads window to app\n\n        window.location.reload();\n        console.log(data[0]);\n        document.cookie = \"uid=\" + data[1][0] + \"; expires=\" + d.toUTCString() + \";\";\n        document.cookie = \"name=\" + data[1][1] + \"; expires=\" + d.toUTCString() + \";\";\n        document.cookie = \"email=\" + data[1][2] + \"; expires=\" + d.toUTCString() + \";\";\n      } else {\n        console.log(data);\n      }\n    }).catch(error => console.log(error));\n  }\n\n  function displayErrMsg(i) {\n    var errorMessages = [\"Either the email address or password are incorrect. Please retry.\", \"Account already exist with this email address.\", \"Please check to make sure the email addresses and passwords match!\", \"One or more fields are empty.\"];\n    var elem = document.getElementsByClassName(\"errorMessage\")[0];\n    elem.innerHTML = errorMessages[i];\n    elem.style.visibility = \"visible\";\n    elem.style.height = \"auto\";\n  }\n\n  function newAccountValidation(email, emailConf, pword, pwordconf) {\n    if (email != emailConf || pword != pwordconf) {\n      displayErrMsg(2);\n      return false;\n    } else if (email == \"\" || pword == \"\") {\n      displayErrMsg(3);\n      return false;\n    } else if (\n    /* call to see if account with email address already exist*/\n    1 == 2) {\n      //uncomment when elseif works\n      displayErrMsg(1);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, \"Expensey\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"emailAddress\",\n    type: \"text\",\n    onChange: \"\",\n    placeholder: \"Type your email address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"createAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, \"Confirm Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"emailAddressConf\",\n    type: \"text\",\n    onChange: \"\",\n    placeholder: \"Type your email address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"createAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"firstName\",\n    type: \"text\",\n    onChange: \"\",\n    placeholder: \"Type your first name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"createAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"lastName\",\n    type: \"text\",\n    onChange: \"\",\n    placeholder: \"Type your last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"pword\",\n    type: \"password\",\n    onChange: \"\",\n    placeholder: \"Type your password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"createAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"pwordConf\",\n    type: \"password\",\n    onChange: \"\",\n    placeholder: \"Type your password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: login,\n    class: \"preCreate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createAccountExpand,\n    class: \"preCreate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createAccount,\n    class: \"createAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, \"Create\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client/client/src/login.js"],"names":["React","ReactDOM","serviceWorker","Login","props","login","email","document","getElementsByClassName","value","pword","validateLogin","createAccountExpand","elems","i","length","style","height","visibility","createAccount","firstName","lastName","emailConf","pwordConf","requestOptions","method","headers","body","JSON","stringify","id","Date","now","first_name","last_name","password","newAccountValidation","fetch","then","res","json","data","window","location","reload","catch","error","console","log","d","setTime","getTime","cookie","toUTCString","displayErrMsg","errorMessages","elem","innerHTML","pwordconf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './login.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst Login = (props) => {\n\n  var login = () => {\n    //Getting the email and pword that user entered into the field\n    var email = document.getElementsByClassName(\"emailAddress\")[0].value\n    var pword = document.getElementsByClassName(\"pword\")[0].value\n    validateLogin(email,pword);\n  };\n\n  var createAccountExpand = () => {\n    //revealing create account elements\n    var elems = document.getElementsByClassName(\"createAccount\");\n    for (var i = 0; i < elems.length;  i++)  {\n      if (i == elems.length - 1) {\n        elems[i].style.height = \"4vh\";\n      }\n      else {\n        elems[i].style.height = \"auto\";\n      }\n      elems[i].style.visibility = \"visible\";\n    }\n\n\n    //Hiding login elements\n    var elems = document.getElementsByClassName(\"preCreate\");\n    for (var i = 0; i < elems.length;  i++)  {\n      elems[i].style.visibility = \"hidden\";\n      elems[i].style.height = \"0\";\n    }\n  };\n\n  var createAccount = () => {\n    //Getting data from form\n    var firstName = document.getElementsByClassName(\"firstName\")[0].value;\n    var lastName = document.getElementsByClassName(\"lastName\")[0].value;\n    var email = document.getElementsByClassName(\"emailAddress\")[0].value;\n    var emailConf = document.getElementsByClassName(\"emailAddressConf\")[0].value;\n    var pword = document.getElementsByClassName(\"pword\")[0].value;\n    var pwordConf = document.getElementsByClassName(\"pwordConf\")[0].value;\n\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: Date.now(),\n        first_name : firstName,\n        last_name : lastName,\n        email : email,\n        password: pword\n      })};\n\n      if (newAccountValidation(email, emailConf,  pword, pwordConf)) {\n        fetch('https://api.expensey.app/users/adduser',requestOptions) \n          .then(res => res.json())\n          .then (data => \n            {\n              if (data == \"Account created successfully\") {\n                //reloads window to login screen\n                window.location.reload();\n              }\n            })\n          .catch(error => console.log(error));\n      }\n  };\n\n  function validateLogin(email, pword) {\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email : email,\n        password: pword\n      })};\n\n    fetch('https://api.expensey.app/users/login',requestOptions) \n\n          .then(res => res.json())\n          .then (data => \n            {\n              var d = new Date();\n              d.setTime(d.getTime() + (24*60*60*1000));\n\n              if (data[0] == \"Account authorization successful!\") {\n                //Allows user to access their account\n                document.cookie = \"status=true; expires=\" + d.toUTCString() + \";\";\n\n                //reloads window to app\n                window.location.reload();\n\n                console.log(data[0]);\n                document.cookie = \"uid=\"+data[1][0]+\"; expires=\" + d.toUTCString() + \";\";\n                document.cookie = \"name=\"+data[1][1]+\"; expires=\" + d.toUTCString() + \";\";\n                document.cookie = \"email=\"+data[1][2]+\"; expires=\" + d.toUTCString() + \";\";\n              }\n              else {\n                console.log(data);\n              }\n            })\n          .catch(error => console.log(error));\n  }\n\n  function displayErrMsg(i) {\n    var errorMessages = [\n      \"Either the email address or password are incorrect. Please retry.\",\n      \"Account already exist with this email address.\",\n      \"Please check to make sure the email addresses and passwords match!\",\n     \"One or more fields are empty.\"\n    ];\n    var elem = document.getElementsByClassName(\"errorMessage\")[0];\n\n    elem.innerHTML = errorMessages[i];\n    elem.style.visibility = \"visible\";\n    elem.style.height = \"auto\";\n  }\n\n  function newAccountValidation(email, emailConf,  pword, pwordconf) {\n    if (email  != emailConf  || pword != pwordconf){\n      displayErrMsg(2);\n      return false;\n    }\n    else if (email == \"\" || pword == \"\") {\n      displayErrMsg(3);\n      return false;\n    }\n    else if (/* call to see if account with email address already exist*/  1==2){\n      //uncomment when elseif works\n      displayErrMsg(1);\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n    return (\n      <div class=\"body\">\n        <h1 class=\"title\">Expensey</h1>\n          <div class=\"login\">\n            <p class=\"errorMessage\"></p> \n              <h2>Email Address</h2>\n                  <input class=\"emailAddress\" type=\"text\" onChange=\"\" placeholder=\"Type your email address\"/>\n              <div class=\"createAccount\">\n                <h2>Confirm Email Address</h2>\n                    <input class=\"emailAddressConf\" type=\"text\" onChange=\"\" placeholder=\"Type your email address\" />\n              </div>\n              <div class=\"createAccount\">\n                <h2>First Name</h2>\n                    <input class=\"firstName\" type=\"text\" onChange=\"\" placeholder=\"Type your first name\"/>\n              </div>\n              <div class=\"createAccount\">\n                <h2>Last Name</h2>\n                    <input class=\"lastName\" type=\"text\" onChange=\"\" placeholder=\"Type your last name\" />\n              </div>\n              <h2>Password</h2>\n                  <input class=\"pword\" type=\"password\" onChange=\"\" placeholder=\"Type your password\"/>\n              <div class=\"createAccount\">\n                <h2>Confirm Password</h2>\n                    <input class=\"pwordConf\" type=\"password\" onChange=\"\" placeholder=\"Type your password\"/>\n              </div>\n              <button onClick={login} class=\"preCreate\">Login</button>\n              <button onClick={createAccountExpand} class=\"preCreate\">Sign up</button>\n              <button onClick={createAccount} class=\"createAccount\">Create</button>\n          </div>\n        </div>\n    );\n}\n\nexport default Login;\n\n\n"]},"metadata":{},"sourceType":"module"}