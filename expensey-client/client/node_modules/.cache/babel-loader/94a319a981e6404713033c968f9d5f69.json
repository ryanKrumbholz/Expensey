{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client/client/src/components/table.js\";\nimport React from 'react';\nimport ExpenseCard from './expense_card';\nimport App from '../App';\nimport './table.css';\n\nconst Table = props => {\n  var expenseCardList = []; //list of expenseCard components; gathered in function 'populateExpenseCards'\n\n  var emptyCardLsContent =\n  /*#__PURE__*/\n  //Element that displays when expenseCardList is empty\n  React.createElement(\"div\", {\n    class: \"emptyCardList\",\n    onClick: props.toggleWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, \"Create new expense\"));\n\n  async function fetchListData(expenses) {\n    /**\n     * Fetches filters list data for search drop downs and search boxes.\n     */\n    var expenses = await expenses;\n\n    function fetchCatList(expenses) {\n      /**\n       * Fetches category from each expense and adds them to a list\n       * that is displayed as a dropdown selector.\n       */\n      var catList = listData().getCatList(); //Assigned to current list of categories, which should be empty on start.\n\n      var catMap = new Map(); //Hashmap of categories for checking if the category has already been added to the list. Also allows to maintain better runtime.\n\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]) {\n            var currExpenseCat = expenses[i].category; //current expense category\n\n            if (!catMap.has(currExpenseCat)) {\n              //checking if category is not in the hashmap.\n              catMap.set(currExpenseCat); //add category to hashmap.\n\n              catList.push(currExpenseCat); //add category to list.\n            }\n          }\n        }\n      }\n\n      if (catList.length > props.catList.length && catList[0]) {\n        //prevents infinite re-rendering by checking only changing state when categories are updated\n        props.setCatList(catList);\n      }\n    }\n\n    function fetchCcList(expenses) {\n      /**\n       * Fetches credit card display info from each expense and adds them to a list\n       * that is displayed as a dropdown selector.\n       */\n      var ccList = listData().getCcList(); //Assigned to current list of credit cards, which should be empty on start.\n\n      var ccMap = new Map(); //Hashmap of credit cards for checking if the category has already been added to the list. Also allows to maintain better runtime.\n\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]) {\n            var currExpenseCc = expenses[i].ccData; //current credit card info\n\n            if (!ccMap.has(currExpenseCc)) {\n              //checking if credit card data is not already in the map.\n              ccMap.set(currExpenseCc);\n              ccList.push(currExpenseCc);\n            }\n          }\n        }\n      }\n\n      if (ccList.length > props.ccList && ccList[0]) {\n        //prevents infinite re-rendering by checking only changing state when credit cards are updated\n        props.setCcList(ccList);\n      }\n    }\n\n    function fetchTagList(expenses) {\n      /**\n       * Fetches tags list from each expense and adds them to a list\n       * that is displayed as a dropdown selector.\n       */\n      var tagList = listData().getTagList(); //Assigned to current list of credit cards, which should be empty on start.\n\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]) {\n            var currExpenseTags = expenses[i].tags; //current list of tags\n\n            if (tagList.length == 0) {\n              //if tag list is empty, assign it to the current tag list\n              tagList = currExpenseTags;\n            } else {\n              tagList = tagList.push(0);\n            }\n          }\n        }\n\n        for (var i = 0; i <= tagList.length; i++) {//write code to find dupe and remove it\n        }\n      }\n\n      if (tagList.length > props.tagList && tagList[0]) {\n        //prevents infinite re-rendering\n        props.setTagList(tagList);\n      }\n    }\n\n    function fetchAllList(expenses) {\n      fetchCatList(expenses);\n      fetchCcList(expenses);\n      fetchTagList(expenses);\n    }\n\n    fetchAllList(expenses);\n  }\n\n  function listData() {\n    var tagList = [];\n    var categoriesList = [];\n    var ccList = [];\n    return {\n      setTagList: function (newTagList) {\n        tagList = newTagList;\n      },\n      setCatList: function (newCatList) {\n        categoriesList = newCatList;\n      },\n      setCcList: function (newCcList) {\n        ccList = newCcList;\n      },\n      getCatList: function () {\n        return categoriesList;\n      },\n      getCcList: function () {\n        return ccList;\n      },\n      getTagList: function () {\n        return tagList;\n      }\n    };\n  }\n\n  var populateSelectList = ls => {\n    var selectLs = [];\n\n    for (var i = 0; i < ls.length; i++) {\n      selectLs.push( /*#__PURE__*/React.createElement(\"option\", {\n        class: \"selectli\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }, ls[i]));\n    }\n\n    return selectLs;\n  };\n\n  var sortByCat = async () => {\n    function helper() {\n      //sorts through expenses and pushes applicable expense to cardLs\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].category === currCat) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n      }\n    }\n\n    var select = document.getElementsByClassName('catList')[0];\n    var currCat;\n    var sortedExpenses = [];\n\n    if (select.options) {\n      //gets current selected category\n      currCat = select.options[select.selectedIndex].text;\n    }\n\n    var expensesLocal = await props.expenses;\n    helper();\n\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper();\n    }\n\n    expenseCardList = [];\n\n    if (currCat === 'Select Category') {\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses);\n    } else {\n      populateExpenseCards(sortedExpenses);\n    }\n\n    props.setExpenses(sortedExpenses);\n  };\n\n  var sortByCC = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].ccData === currCC) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n      }\n    }\n\n    var select = document.getElementsByClassName('ccList')[0];\n    var currCC;\n    var sortedExpenses = [];\n\n    if (select.options) {\n      currCC = select.options[select.selectedIndex].text;\n    }\n\n    var expensesLocal = await props.expenses;\n    helper();\n\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper();\n    }\n\n    expenseCardList = [];\n\n    if (currCC === 'Select Category') {\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses);\n    } else {\n      populateExpenseCards(sortedExpenses);\n    }\n\n    props.setExpenses(sortedExpenses);\n  };\n\n  var sortByTag = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].tags.includes(currTag)) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n      }\n    }\n\n    var select = document.getElementsByClassName('tagList')[0];\n    var currTag;\n    var sortedExpenses = [];\n\n    if (select.options) {\n      currTag = select.options[select.selectedIndex].text;\n    }\n\n    var expensesLocal = await props.expenses;\n    helper();\n\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper();\n    }\n\n    expenseCardList = [];\n\n    if (currTag === 'Select Tag') {\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses);\n    } else {\n      populateExpenseCards(sortedExpenses);\n    }\n\n    props.setExpenses(sortedExpenses);\n  };\n\n  var sortByMerch = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].merchant.toUpperCase() === input.toUpperCase()) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n      }\n    }\n\n    var input = document.getElementsByClassName('merchIn')[0].value;\n    var sortedExpenses = [];\n    var expensesLocal = await props.expenses;\n    helper();\n\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper();\n    }\n\n    expenseCardList = [];\n\n    if (input === '') {\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses);\n    } else {\n      populateExpenseCards(sortedExpenses);\n    }\n\n    props.setExpenses(sortedExpenses);\n  };\n\n  var sortByDate = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].dateNum >= lowerBound || expensesLocal[i].dateNum <= upperBound) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n      }\n    }\n\n    var lowerBound = document.getElementsByClassName('dateFrom')[0].valueAsNumber;\n    var upperBound = document.getElementsByClassName('dateTo')[0].valueAsNumber;\n    var sortedExpenses = [];\n    var expensesLocal = await props.expenses;\n    helper();\n\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper();\n    }\n\n    populateExpenseCards(sortedExpenses);\n    props.setExpenses(sortedExpenses);\n  };\n\n  var sortByStatus = async () => {\n    //TODO need to finish this function\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].status == unreported && props.c1 == false) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n\n        if (expensesLocal[i].status === open && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n\n        if (expensesLocal[i].status === processing && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n\n        if (expensesLocal[i].status === approved && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n\n        if (expensesLocal[i].status === reimbursed && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n\n        if (expensesLocal[i].status === closed && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n\n        if (expensesLocal[i].status === deleted && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n      }\n    }\n\n    var sortedExpenses = [];\n    var expensesLocal = await props.expenses;\n    var unreported = document.getElementsByClassName('c1')[0].text;\n    var open = document.getElementsByClassName('c2')[0].text;\n    var processing = document.getElementsByClassName('c3')[0].text;\n    var approved = document.getElementsByClassName('c4')[0].text;\n    var reimbursed = document.getElementsByClassName('c5')[0].text;\n    var closed = document.getElementsByClassName('c6')[0].text;\n    var deleted = document.getElementsByClassName('c7')[0].text;\n    helper();\n\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper();\n    }\n\n    populateExpenseCards(sortedExpenses);\n    props.setExpenses(sortedExpenses);\n  };\n\n  function filters() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"datesFiltersList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"From\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }\n    }, \"From: \"), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"dateFrom\",\n      type: \"date\",\n      id: \"\",\n      name: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"To\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    }, \"To: \"), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"dateTo\",\n      type: \"date\",\n      id: \"\",\n      name: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"submit\",\n      onClick: sortByDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"typeFiltersList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      class: \"merchIn\",\n      type: \"text\",\n      placeholder: \"Merchant\",\n      onChange: \"\",\n      onSubmit: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"submit\",\n      onClick: sortByMerch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"categoryTagList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      class: \"catList\",\n      onChange: sortByCat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 15\n      }\n    }, \"Select Category\"), populateSelectList(props.catList))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      class: \"ccList\",\n      onChange: sortByCC,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 15\n      }\n    }, \"Select Card\"), populateSelectList(props.ccList))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      class: \"tagList\",\n      onChange: sortByTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 15\n      }\n    }, \"Select Tag\"), populateSelectList(props.tagList)))), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"statusList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: props.c1,\n      onClick: props.togglec1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 19\n      }\n    }), \"Unreported\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: props.c2,\n      onClick: props.togglec2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }\n    }), \"Open\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: props.c3,\n      onClick: props.togglec3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }\n    }), \"Processing\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: props.c4,\n      onClick: props.togglec4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }\n    }), \"Approved\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: props.c5,\n      onClick: props.togglec5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 17\n      }\n    }), \"Reimbursed\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: props.c6,\n      onClick: props.togglec6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 17\n      }\n    }), \"Closed\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: props.c7,\n      onClick: props.togglec7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }\n    }), \"Deleted\"))));\n  }\n\n  var getCookie = cname => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n\n    return \"\";\n  };\n\n  async function fetchExpenses() {\n    var userEmail = getCookie(\"email\");\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: userEmail\n      })\n    };\n    var data = await fetch('https://api.expensey.app/users/expenses', requestOptions).then(res => res.json()).then(data => {\n      return data;\n    }).catch(error => console.log(error));\n    return data;\n  }\n\n  async function populateExpenseCards(expenses) {\n    var expenses = await expenses;\n\n    if (expenses) {\n      var numCards = expenses.length;\n\n      for (var i = 0; i < numCards; i++) {\n        var arr = expenses[i].date.split('-');\n        var date = arr[1] + '-' + arr[2] + '-' + arr[0];\n        expenseCardList.push( /*#__PURE__*/React.createElement(ExpenseCard, {\n          data: [date, expenses[i].merchant, expenses[i].amount, expenses[i].category, expenses[i].description, expenses[i].tag, expenses[i].receiptImgLink, expenses[i].status],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 28\n          }\n        }));\n      }\n    }\n\n    if (expenseCardList != props.currCardLs) {\n      //if statement prevents infinite re-rendering by only changing state when expenses update\n      props.setCardLs(expenseCardList);\n    }\n  }\n\n  var expenses = fetchExpenses();\n\n  if (props.expenses.length == 0) {\n    props.setExpenses(expenses);\n  }\n\n  if (props.currCardLs.length == 0) {\n    populateExpenseCards(expenses);\n  }\n\n  function table() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"theader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      class: \"dateli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"statusli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 11\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"merchli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 11\n      }\n    }, \"Merchant\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"amountli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 11\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"catli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"descli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 11\n      }\n    }, \"Description\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"tbody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }\n    }, props.currCardLs != 0 ? props.currCardLs : emptyCardLsContent));\n  }\n\n  fetchListData(expenses);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 5\n    }\n  }, filters(), table());\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client/client/src/components/table.js"],"names":["React","ExpenseCard","App","Table","props","expenseCardList","emptyCardLsContent","toggleWindow","fetchListData","expenses","fetchCatList","catList","listData","getCatList","catMap","Map","i","length","currExpenseCat","category","has","set","push","setCatList","fetchCcList","ccList","getCcList","ccMap","currExpenseCc","ccData","setCcList","fetchTagList","tagList","getTagList","currExpenseTags","tags","setTagList","fetchAllList","categoriesList","newTagList","newCatList","newCcList","populateSelectList","ls","selectLs","sortByCat","helper","expensesLocal","currCat","sortedExpenses","select","document","getElementsByClassName","options","selectedIndex","text","populateExpenseCards","setExpenses","sortByCC","currCC","sortByTag","includes","currTag","sortByMerch","merchant","toUpperCase","input","value","sortByDate","dateNum","lowerBound","upperBound","valueAsNumber","sortByStatus","status","unreported","c1","open","processing","approved","reimbursed","closed","deleted","filters","togglec1","c2","togglec2","c3","togglec3","c4","togglec4","c5","togglec5","c6","togglec6","c7","togglec7","getCookie","cname","name","decodedCookie","decodeURIComponent","cookie","ca","split","c","charAt","substring","indexOf","fetchExpenses","userEmail","requestOptions","method","headers","body","JSON","stringify","email","data","fetch","then","res","json","catch","error","console","log","numCards","arr","date","amount","description","tag","receiptImgLink","currCardLs","setCardLs","table"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ExpenseCard  from './expense_card';\nimport App from '../App';\nimport './table.css';\n\nconst Table = props => {\n  var expenseCardList =  []; //list of expenseCard components; gathered in function 'populateExpenseCards'\n  var emptyCardLsContent = //Element that displays when expenseCardList is empty\n  <div class=\"emptyCardList\" onClick={props.toggleWindow}>\n    <h3>Create new expense</h3>\n  </div>\n\n  async function fetchListData(expenses) {\n    /**\n     * Fetches filters list data for search drop downs and search boxes.\n     */\n    var expenses = await expenses;\n\n    function fetchCatList(expenses) {\n      /**\n       * Fetches category from each expense and adds them to a list\n       * that is displayed as a dropdown selector.\n       */\n      var catList = listData().getCatList(); //Assigned to current list of categories, which should be empty on start.\n      var catMap = new Map(); //Hashmap of categories for checking if the category has already been added to the list. Also allows to maintain better runtime.\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]){\n            var currExpenseCat = expenses[i].category; //current expense category\n            if (!catMap.has(currExpenseCat)){ \n              //checking if category is not in the hashmap.\n              catMap.set(currExpenseCat); //add category to hashmap.\n              catList.push(currExpenseCat); //add category to list.\n            }\n          }\n        }\n      }\n      if (catList.length > props.catList.length && catList[0]) {\n        //prevents infinite re-rendering by checking only changing state when categories are updated\n      props.setCatList(catList)\n      }\n    }\n\n    function fetchCcList(expenses) {\n      /**\n       * Fetches credit card display info from each expense and adds them to a list\n       * that is displayed as a dropdown selector.\n       */\n      var ccList = listData().getCcList(); //Assigned to current list of credit cards, which should be empty on start.\n      var ccMap = new Map(); //Hashmap of credit cards for checking if the category has already been added to the list. Also allows to maintain better runtime.\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]){\n            var currExpenseCc = expenses[i].ccData; //current credit card info\n            if (!ccMap.has(currExpenseCc)) {\n              //checking if credit card data is not already in the map.\n              ccMap.set(currExpenseCc);\n              ccList.push(currExpenseCc);\n            }\n          }\n        }\n      }\n      if (ccList.length > props.ccList && ccList[0]){\n        //prevents infinite re-rendering by checking only changing state when credit cards are updated\n      props.setCcList(ccList)\n    }\n    }\n\n    function fetchTagList(expenses) {\n      /**\n       * Fetches tags list from each expense and adds them to a list\n       * that is displayed as a dropdown selector.\n       */\n      var tagList = listData().getTagList(); //Assigned to current list of credit cards, which should be empty on start.\n      if (expenses) {\n      for (var i = 0; i <= expenses.length; i++) {\n        if (expenses[i]){\n          var currExpenseTags = expenses[i].tags; //current list of tags\n            if (tagList.length == 0){\n              //if tag list is empty, assign it to the current tag list\n              tagList = currExpenseTags\n            }\n            else{\n              tagList = tagList.push(0);\n            }\n\n        }\n      }\n      for (var i = 0; i <= tagList.length; i++) {\n        //write code to find dupe and remove it\n      }\n    }\n    if (tagList.length > props.tagList && tagList[0]){\n      //prevents infinite re-rendering\n      props.setTagList(tagList)\n    }\n  }\n    function fetchAllList(expenses) {\n      fetchCatList(expenses); \n      fetchCcList(expenses); \n      fetchTagList(expenses);\n    }\n    fetchAllList(expenses);\n  }\n\n  function listData (){\n    var tagList = [];\n    var categoriesList = [];\n    var ccList = [];\n\n    return {\n      setTagList : function (newTagList) {\n        tagList = newTagList;\n      },\n      setCatList : function (newCatList) {\n        categoriesList = newCatList;\n      },\n      setCcList : function (newCcList) {\n        ccList = newCcList;\n      },\n      getCatList : function () {\n        return categoriesList;\n      },\n      getCcList : function () {\n        return  ccList;\n      },\n      getTagList : function () {\n        return tagList;\n      }\n    };\n  }\n\n  var populateSelectList = (ls) => {\n    var selectLs = [];\n    for(var i = 0; i < ls.length; i++) {\n      selectLs.push(<option  class=\"selectli\">{ls[i]}</option>)\n    }\n    return selectLs;\n  }\n\n  var sortByCat = async () => {\n    function helper() {\n      //sorts through expenses and pushes applicable expense to cardLs\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].category === currCat) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n\n    var select = document.getElementsByClassName('catList')[0]\n    var currCat;\n    var sortedExpenses = [];\n    if (select.options) {\n      //gets current selected category\n      currCat = select.options[select.selectedIndex].text\n    }\n    var expensesLocal = await props.expenses;\n\n    helper()\n    \n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper()\n    }\n    expenseCardList = [];\n\n    if (currCat === 'Select Category'){\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses)\n    }\n    else{\n      populateExpenseCards(sortedExpenses)\n    }\n    props.setExpenses(sortedExpenses)\n  }\n\n  var sortByCC = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].ccData === currCC) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n\n    var select = document.getElementsByClassName('ccList')[0]\n    var currCC;\n    var sortedExpenses = [];\n      if (select.options) {\n        currCC = select.options[select.selectedIndex].text\n      }\n\n      var expensesLocal = await props.expenses;\n    \n      helper()\n    \n      if (sortedExpenses.length == 0) {\n        expensesLocal = await expenses;\n        helper()\n      }\n\n    expenseCardList = [];\n\n    if (currCC === 'Select Category'){\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses)\n    }\n    else{\n      populateExpenseCards(sortedExpenses)\n    }\n    props.setExpenses(sortedExpenses)\n  }\n\n  var sortByTag = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].tags.includes(currTag)) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n    var select = document.getElementsByClassName('tagList')[0]\n    var currTag;\n    var sortedExpenses = [];\n    if (select.options) {\n      currTag = select.options[select.selectedIndex].text\n    }\n    var expensesLocal = await props.expenses;\n    \n    helper()\n    \n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper()\n    }\n    \n    expenseCardList = [];\n\n    if (currTag === 'Select Tag'){\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses)\n    }\n    else{\n      populateExpenseCards(sortedExpenses)\n    }\n    props.setExpenses(sortedExpenses)\n  }\n\n  var sortByMerch = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].merchant.toUpperCase() === input.toUpperCase()) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n    var input = document.getElementsByClassName('merchIn')[0].value\n    var sortedExpenses = [];\n    var expensesLocal = await props.expenses;\n    \n    helper()\n    \n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper()\n    }\n\n    expenseCardList = [];\n\n    if (input === ''){\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses)\n    }\n    else{\n      populateExpenseCards(sortedExpenses)\n    }\n    props.setExpenses(sortedExpenses)\n  }\n\n  var sortByDate = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].dateNum >= lowerBound || expensesLocal[i].dateNum <= upperBound) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n    var lowerBound = document.getElementsByClassName('dateFrom')[0].valueAsNumber\n    var upperBound = document.getElementsByClassName('dateTo')[0].valueAsNumber\n    var sortedExpenses = [];\n    var expensesLocal = await props.expenses;\n\n    helper()\n\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper()\n    }\n\n    populateExpenseCards(sortedExpenses)\n    props.setExpenses(sortedExpenses)\n\n  }\n\n  var sortByStatus = async () => {\n    //TODO need to finish this function\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if(expensesLocal[i].status == unreported && props.c1 == false) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n        if(expensesLocal[i].status === open && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n        if(expensesLocal[i].status === processing && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n        if(expensesLocal[i].status === approved && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n        if(expensesLocal[i].status === reimbursed && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n        if(expensesLocal[i].status === closed && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n        if(expensesLocal[i].status === deleted && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n\n    var sortedExpenses = [];\n    var expensesLocal = await props.expenses;\n    var unreported = document.getElementsByClassName('c1')[0].text\n    var open = document.getElementsByClassName('c2')[0].text\n    var processing = document.getElementsByClassName('c3')[0].text\n    var approved = document.getElementsByClassName('c4')[0].text\n    var reimbursed = document.getElementsByClassName('c5')[0].text\n    var closed = document.getElementsByClassName('c6')[0].text\n    var deleted = document.getElementsByClassName('c7')[0].text\n\n    helper()\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper()\n    }\n    populateExpenseCards(sortedExpenses)\n    props.setExpenses(sortedExpenses)\n  }\n\n  function filters () {\n    return(\n          <div className=\"filters\">\n            <ul class=\"datesFiltersList\">\n            <li>\n              <form action=\"\">\n                <label for=\"From\">From: </label>\n                <input class=\"dateFrom\" type=\"date\" id=\"\" name=\"\"/>\n              </form>\n            </li>\n            <li>\n              <form action=\"\">\n                <label for=\"To\">To: </label>\n                <input class=\"dateTo\" type=\"date\" id=\"\" name=\"\"/>\n              </form>\n              <button class=\"submit\" onClick={sortByDate}></button>\n            </li>\n          </ul>\n          <ul class=\"typeFiltersList\">\n            <li>\n                <label>\n                  <input class=\"merchIn\" type=\"text\" placeholder=\"Merchant\" onChange=\"\" onSubmit=\"\" />\n                  <button class=\"submit\" onClick={sortByMerch}></button>\n                </label>\n          </li>\n          </ul>\n          <ul class=\"categoryTagList\">\n            <li>\n              <select class=\"catList\" onChange={sortByCat}>\n              <option value=\"\" selected>Select Category</option>\n                {populateSelectList(props.catList)}\n              </select>\n            </li>\n            <li>\n              <select class=\"ccList\" onChange={sortByCC}>\n              <option value=\"\" selected>Select Card</option>\n              {populateSelectList(props.ccList)}\n              </select>\n            </li>\n            <li>\n              <select class=\"tagList\" onChange={sortByTag}>\n              <option value=\"\" selected>Select Tag</option>\n              {populateSelectList(props.tagList)}\n              </select>\n            </li>\n          </ul>\n          <ul class=\"statusList\">\n            <li>\n                <label class=\"c1\">\n                  <input type=\"checkbox\" checked={props.c1} onClick={props.togglec1}/>\n                  Unreported\n                </label>\n            </li>\n            <li>\n              <label class=\"c2\">\n                <input type=\"checkbox\" checked={props.c2} onClick={props.togglec2}/>\n                Open\n              </label>\n            </li>\n            <li>\n              <label class=\"c3\">\n                <input type=\"checkbox\" checked={props.c3} onClick={props.togglec3}/>\n                Processing\n              </label>\n            </li>\n            <li>\n              <label class=\"c4\">\n                <input type=\"checkbox\" checked={props.c4} onClick={props.togglec4}/>\n                Approved\n              </label>\n            </li>\n            <li>\n              <label class=\"c5\">\n                <input type=\"checkbox\" checked={props.c5} onClick={props.togglec5}/>\n                Reimbursed\n              </label>\n            </li>\n            <li>\n              <label class=\"c6\">\n                <input type=\"checkbox\" checked={props.c6} onClick={props.togglec6}/>\n                Closed\n              </label>\n            </li>\n            <li>\n              <label class=\"c7\">\n                <input type=\"checkbox\" checked={props.c7} onClick={props.togglec7}/>\n                Deleted\n              </label>\n            </li> \n          </ul>\n        </div>\n    )\n  }\n\n  var getCookie = cname => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for(var i = 0; i <ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  }\n\n  async function fetchExpenses() {\n    var userEmail = getCookie(\"email\");\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email : userEmail\n      })};\n\n      var data = await fetch('https://api.expensey.app/users/expenses',requestOptions) \n          .then(res => res.json())\n          .then (data => \n            {\n              return data\n            })\n          .catch(error => console.log(error));\n\n      return data\n      }\n\nasync function populateExpenseCards (expenses) {\n  var expenses = await expenses;\n  if (expenses) {\n    var numCards = expenses.length;\n    for (var i = 0; i < numCards; i++) {\n      var arr = expenses[i].date.split('-')\n      var date = arr[1] + '-' + arr[2] + '-' + arr[0]\n      expenseCardList.push(<ExpenseCard data = {[date, expenses[i].merchant, expenses[i].amount,\n       expenses[i].category,expenses[i].description, expenses[i].tag, expenses[i].receiptImgLink, expenses[i].status]}/>)\n    }\n  }\n  if (expenseCardList != props.currCardLs){\n    //if statement prevents infinite re-rendering by only changing state when expenses update\n    props.setCardLs(expenseCardList);\n  }\n  \n  }\n\n  var expenses = fetchExpenses();\n  \n  if (props.expenses.length == 0) {\n    props.setExpenses(expenses);\n  }\n\n  if (props.currCardLs.length == 0) {\n    populateExpenseCards(expenses);\n  }\n\n  function table (){\n    return(\n      <div class=\"table\">\n        <ul class=\"theader\">\n          <li class=\"dateli\">Date</li>\n          <li class=\"statusli\">Status</li>\n          <li class=\"merchli\">Merchant</li>\n          <li class=\"amountli\">Amount</li>\n          <li class=\"catli\">Category</li>\n          <li class=\"descli\">Description</li>\n        </ul>\n        <div class=\"tbody\">\n        {(props.currCardLs != 0) ? props.currCardLs : emptyCardLsContent }\n        </div>\n      </div>\n    );\n  }\n\n  fetchListData(expenses);\n\n  return (\n    <div>\n      {filters()}\n      {table()}\n    </div>\n  )\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}