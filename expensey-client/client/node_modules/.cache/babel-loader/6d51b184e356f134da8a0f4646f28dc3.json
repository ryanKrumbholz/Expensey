{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client /client/src/landing.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './landing.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst Landing = props => {\n  var login = () => {\n    //Getting the email and pword that user entered into the field\n    var email = document.getElementsByClassName(\"emailAddress\")[0].value;\n    var pword = document.getElementsByClassName(\"pword\")[0].value;\n    validateLogin(email, pword);\n  };\n\n  var createAccountExpand = () => {\n    //revealing create account elements\n    var elems = document.getElementsByClassName(\"createAccount\");\n\n    for (var i = 0; i < elems.length; i++) {\n      elems[i].style.visibility = \"visible\";\n      elems[i].style.height = \"auto\";\n    } //Hiding login elements\n\n\n    var elems = document.getElementsByClassName(\"preCreate\");\n\n    for (var i = 0; i < elems.length; i++) {\n      elems[i].style.visibility = \"hidden\";\n      elems[i].style.height = \"0\";\n    }\n  };\n\n  var createAccount = () => {\n    //Getting data from form\n    var firstName = document.getElementsByClassName(\"firstName\")[0].value;\n    var lastName = document.getElementsByClassName(\"lastName\")[0].value;\n    var email = document.getElementsByClassName(\"emailAddress\")[0].value;\n    var emailConf = document.getElementsByClassName(\"emailAddressConf\")[0].value;\n    var pword = document.getElementsByClassName(\"pword\")[0].value;\n    var pwordConf = document.getElementsByClassName(\"pwordConf\")[0].value;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: Date.now(),\n        first_name: firstName,\n        last_name: lastName,\n        email: email,\n        password: pword\n      })\n    };\n\n    if (newAccountValidation(email, emailConf, pword, pwordConf)) {\n      fetch('http://localhost:9000/users/adduser', requestOptions).then(res => res.json()).then(data => {\n        if (data == \"Account created successfully\") {\n          //reloads window to login screen\n          window.location.reload();\n        }\n      }).catch(error => console.log(error));\n    }\n  };\n\n  function validateLogin(email, pword) {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: pword\n      })\n    };\n    fetch('http://localhost:9000/users/login', requestOptions).then(res => res.json()).then(data => {\n      if (data[0] == \"Account authorization successful!\") {\n        //Allows user to access their account\n        sessionStorage.setItem('status', true); //reloads window to app\n\n        window.location.reload();\n        console.log(data[0]);\n        sessionStorage.setItem('uid', data[1][0]);\n        sessionStorage.setItem('name', data[1][1]);\n        sessionStorage.setItem('email', data[1][2]);\n      } else {\n        console.log(data);\n      }\n    }).catch(error => console.log(error));\n  }\n\n  function displayErrMsg(i) {\n    var errorMessages = [\"Either the email address or password are incorrect. Please retry.\", \"Account already exist with this email address.\", \"Please check to make sure the email addresses and passwords match!\", \"One or more fields are empty.\"];\n    var elem = document.getElementsByClassName(\"errorMessage\")[0];\n    elem.innerHTML = errorMessages[i];\n    elem.style.visibility = \"visible\";\n    elem.style.height = \"auto\";\n  }\n\n  function newAccountValidation(email, emailConf, pword, pwordconf) {\n    if (email != emailConf || pword != pwordconf) {\n      displayErrMsg(2);\n      return false;\n    } else if (email == \"\" || pword == \"\") {\n      displayErrMsg(3);\n      return false;\n    } else if (\n    /* call to see if account with email address already exist*/\n    1 == 2) {\n      //uncomment when elseif works\n      displayErrMsg(1);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"emailAddress\",\n    type: \"text\",\n    onChange: \"\",\n    placeholder: \"Type your email address here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"createAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"Confirm Email Address\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"emailAddressConf\",\n    type: \"text\",\n    onChange: \"\",\n    placeholder: \"Type your email address here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"createAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"firstName\",\n    type: \"text\",\n    onChange: \"\",\n    placeholder: \"Type your first name here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"createAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"lastName\",\n    type: \"text\",\n    onChange: \"\",\n    placeholder: \"ex. Doe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"pword\",\n    type: \"text\",\n    onChange: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"createAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"pwordConf\",\n    type: \"text\",\n    onChange: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: login,\n    class: \"preCreate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createAccountExpand,\n    class: \"preCreate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createAccount,\n    class: \"createAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, \"Create\"));\n};\n\nexport default Landing;","map":{"version":3,"sources":["/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client /client/src/landing.js"],"names":["React","ReactDOM","serviceWorker","Landing","props","login","email","document","getElementsByClassName","value","pword","validateLogin","createAccountExpand","elems","i","length","style","visibility","height","createAccount","firstName","lastName","emailConf","pwordConf","requestOptions","method","headers","body","JSON","stringify","id","Date","now","first_name","last_name","password","newAccountValidation","fetch","then","res","json","data","window","location","reload","catch","error","console","log","sessionStorage","setItem","displayErrMsg","errorMessages","elem","innerHTML","pwordconf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './landing.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst Landing = (props) => {\n\n  var login = () => {\n    //Getting the email and pword that user entered into the field\n    var email = document.getElementsByClassName(\"emailAddress\")[0].value\n    var pword = document.getElementsByClassName(\"pword\")[0].value\n    validateLogin(email,pword);\n  };\n\n  var createAccountExpand = () => {\n    //revealing create account elements\n    var elems = document.getElementsByClassName(\"createAccount\");\n    for (var i = 0; i < elems.length;  i++)  {\n      elems[i].style.visibility = \"visible\";\n      elems[i].style.height = \"auto\";\n    }\n    //Hiding login elements\n    var elems = document.getElementsByClassName(\"preCreate\");\n    for (var i = 0; i < elems.length;  i++)  {\n      elems[i].style.visibility = \"hidden\";\n      elems[i].style.height = \"0\";\n    }\n  };\n\n  var createAccount = () => {\n    //Getting data from form\n    var firstName = document.getElementsByClassName(\"firstName\")[0].value;\n    var lastName = document.getElementsByClassName(\"lastName\")[0].value;\n    var email = document.getElementsByClassName(\"emailAddress\")[0].value;\n    var emailConf = document.getElementsByClassName(\"emailAddressConf\")[0].value;\n    var pword = document.getElementsByClassName(\"pword\")[0].value;\n    var pwordConf = document.getElementsByClassName(\"pwordConf\")[0].value;\n\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: Date.now(),\n        first_name : firstName,\n        last_name : lastName,\n        email : email,\n        password: pword\n      })};\n\n      if (newAccountValidation(email, emailConf,  pword, pwordConf)) {\n        fetch('http://localhost:9000/users/adduser',requestOptions) \n          .then(res => res.json())\n          .then (data => \n            {\n              if (data == \"Account created successfully\") {\n                //reloads window to login screen\n                window.location.reload();\n              }\n            })\n          .catch(error => console.log(error));\n      }\n  };\n\n  function validateLogin(email, pword) {\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email : email,\n        password: pword\n      })};\n\n    fetch('http://localhost:9000/users/login',requestOptions) \n          .then(res => res.json())\n          .then (data => \n            {\n              if (data[0] == \"Account authorization successful!\") {\n                //Allows user to access their account\n                sessionStorage.setItem('status', true);\n\n                //reloads window to app\n                window.location.reload();\n\n                console.log(data[0]);\n                sessionStorage.setItem('uid', data[1][0]);\n                sessionStorage.setItem('name', data[1][1]);\n                sessionStorage.setItem('email', data[1][2]);\n              }\n              else {\n                console.log(data);\n              }\n            })\n          .catch(error => console.log(error));\n  }\n\n  function displayErrMsg(i) {\n    var errorMessages = [\n      \"Either the email address or password are incorrect. Please retry.\",\n      \"Account already exist with this email address.\",\n      \"Please check to make sure the email addresses and passwords match!\",\n     \"One or more fields are empty.\"\n    ];\n    var elem = document.getElementsByClassName(\"errorMessage\")[0];\n\n    elem.innerHTML = errorMessages[i];\n    elem.style.visibility = \"visible\";\n    elem.style.height = \"auto\";\n  }\n\n  function newAccountValidation(email, emailConf,  pword, pwordconf) {\n    if (email  != emailConf  || pword != pwordconf){\n      displayErrMsg(2);\n      return false;\n    }\n    else if (email == \"\" || pword == \"\") {\n      displayErrMsg(3);\n      return false;\n    }\n    else if (/* call to see if account with email address already exist*/  1==2){\n      //uncomment when elseif works\n      displayErrMsg(1);\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n    return (\n        <div class=\"login\">\n          <p class=\"errorMessage\"></p> \n            <h2>Email Address</h2>\n            <form onSubmit=\"\">\n              <label>\n                <input class=\"emailAddress\" type=\"text\" onChange=\"\" placeholder=\"Type your email address here\" />\n              </label>\n            </form>\n            <div class=\"createAccount\">\n              <h2>Confirm Email Address</h2>\n              <form onSubmit=\"\">\n                <label>\n                  <input class=\"emailAddressConf\" type=\"text\" onChange=\"\" placeholder=\"Type your email address here\" />\n                </label>\n              </form>\n            </div>\n            <div class=\"createAccount\">\n              <h2>First Name</h2>\n              <form onSubmit=\"\">\n                <label>\n                  <input class=\"firstName\" type=\"text\" onChange=\"\" placeholder=\"Type your first name here\"/>\n                </label>\n              </form>\n            </div>\n            <div class=\"createAccount\">\n              <h2>Last Name</h2>\n              <form onSubmit=\"\">\n                <label>\n                  <input class=\"lastName\" type=\"text\" onChange=\"\" placeholder=\"ex. Doe\" />\n                </label>\n              </form>\n            </div>\n            <h2>Password</h2>\n            <form onSubmit=\"\">\n              <label>\n                <input class=\"pword\" type=\"text\" onChange=\"\" />\n              </label>\n            </form>\n            <div class=\"createAccount\">\n              <h2>Confirm Password</h2>\n              <form onSubmit=\"\">\n                <label>\n                  <input class=\"pwordConf\" type=\"text\" onChange=\"\" />\n                </label>\n              </form>\n            </div>\n            <button onClick={login} class=\"preCreate\">Login</button>\n            <button onClick={createAccountExpand} class=\"preCreate\">Sign up</button>\n            <button onClick={createAccount} class=\"createAccount\">Create</button>\n        </div>\n    );\n}\n\nexport default Landing;\n\n\n"]},"metadata":{},"sourceType":"module"}