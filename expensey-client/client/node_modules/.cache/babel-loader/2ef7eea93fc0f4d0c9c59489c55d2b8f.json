{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client/client/src/components/table.js\";\nimport React from 'react';\nimport ExpenseCard from './expense_card';\nimport App from '../App';\nimport './table.css';\n\nconst Table = props => {\n  var expenseCardList = [];\n  var emptyCardLsContent = /*#__PURE__*/React.createElement(\"div\", {\n    class: \"emptyCardList\",\n    onClick: props.toggleWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 29\n    }\n  }, \"Create new expense\"));\n\n  async function fetchListData(expenses) {\n    var expenses = await expenses;\n\n    function fetchCatList(expenses) {\n      var catList = listData().getCatList();\n\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]) {\n            var currExpenseCat = expenses[i].category;\n\n            if (!catList.includes(currExpenseCat)) {\n              catList.push(currExpenseCat);\n            }\n          }\n        }\n      }\n\n      if (catList.length > props.catList.length && catList[0]) {\n        //prevents infinite re-rendering\n        props.setCatList(catList);\n      }\n    }\n\n    function fetchCcList(expenses) {\n      var ccList = listData().getCcList();\n\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]) {\n            var currExpenseCc = expenses[i].ccData;\n\n            if (!ccList.includes(currExpenseCc)) {\n              ccList.push(currExpenseCc);\n            }\n          }\n        }\n      }\n\n      if (ccList.length > props.ccList && ccList[0]) {\n        //prevents infinite re-rendering\n        props.setCcList(ccList);\n      }\n    }\n\n    function fetchTagList(expenses) {\n      var tagList = listData().getTagList();\n\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]) {\n            var currExpenseTag = expenses[i].tag;\n\n            if (!tagList.includes(currExpenseTag)) {\n              tagList.push(currExpenseTag);\n            }\n          }\n        }\n      }\n\n      if (tagList.length > props.tagList && tagList[0]) {\n        //prevents infinite re-rendering\n        props.setTagList(tagList);\n      }\n    }\n\n    function fetchAllList(expenses) {\n      fetchCatList(expenses);\n      fetchCcList(expenses);\n      fetchTagList(expenses);\n    }\n\n    fetchAllList(expenses);\n  }\n\n  function listData() {\n    var tagList = [];\n    var categoriesList = [];\n    var ccList = [];\n    return {\n      setTagList: function (newTagList) {\n        tagList = newTagList;\n      },\n      setCatList: function (newCatList) {\n        categoriesList = newCatList;\n      },\n      setCcList: function (newCcList) {\n        ccList = newCcList;\n      },\n      getCatList: function () {\n        return categoriesList;\n      },\n      getCcList: function () {\n        return ccList;\n      },\n      getTagList: function () {\n        return tagList;\n      }\n    };\n  }\n\n  var populateSelectList = ls => {\n    var selectLs = [];\n\n    for (var i = 0; i < ls.length; i++) {\n      selectLs.push( /*#__PURE__*/React.createElement(\"option\", {\n        class: \"selectli\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, ls[i]));\n    }\n\n    return selectLs;\n  };\n\n  var sortByCat = async () => {\n    var select = document.getElementsByClassName('catList')[0];\n    var currCat;\n    var sortedExpenses = [];\n\n    if (select.options) {\n      //gets current selected category\n      currCat = select.options[select.selectedIndex].text;\n    }\n\n    var expensesLocal = await expenses;\n\n    for (var i = 0; i < expensesLocal.length; i++) {\n      if (expensesLocal[i].category === currCat) {\n        sortedExpenses.push(expensesLocal[i]);\n      }\n    }\n\n    expenseCardList = [];\n    populateExpenseCards(sortedExpenses);\n  };\n\n  var sortByCC = () => {\n    var select = document.getElementsByClassName('ccList')[0]; //   if (select.options) {\n    //     var currCC = select.options[select.selectedIndex].text\n    // }\n  };\n\n  var sortByTag = () => {\n    var select = document.getElementsByClassName('tagList')[0]; // if (select.options) {\n    //   var currTag = select.options[select.selectedIndex].text\n    // }\n  };\n\n  function filters() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"datesFiltersList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"From\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, \"From: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      id: \"\",\n      name: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"To\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, \"To: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      id: \"\",\n      name: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"typeFiltersList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      class: \"merchIn\",\n      type: \"text\",\n      placeholder: \"Merchant\",\n      onChange: \"\",\n      onSubmit: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"categoryTagList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      class: \"catList\",\n      onChange: sortByCat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, \"Select Category\"), populateSelectList(props.catList))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      class: \"ccList\",\n      onChange: sortByCC(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, \"Select Card\"), populateSelectList(props.ccList))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      class: \"tagList\",\n      onChange: sortByTag(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, \"Select Tag\"), populateSelectList(props.tagList)))), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"statusList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }), \"Unreported\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }), \"Open\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }), \"Processing\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }), \"Approved\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }), \"Reimbursed\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }), \"Closed\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }), \"Deleted\"))));\n  }\n\n  var getCookie = cname => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n\n    return \"\";\n  };\n\n  async function fetchExpenses() {\n    var userEmail = getCookie(\"email\");\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: userEmail\n      })\n    };\n    var data = await fetch('https://api.expensey.app/users/expenses', requestOptions).then(res => res.json()).then(data => {\n      return data;\n    }).catch(error => console.log(error));\n    return data;\n  }\n\n  async function populateExpenseCards(expenses) {\n    var expenses = await expenses;\n\n    if (expenses) {\n      var numCards = expenses.length;\n\n      for (var i = 0; i < numCards; i++) {\n        expenseCardList.push( /*#__PURE__*/React.createElement(ExpenseCard, {\n          data: [expenses[i].date, expenses[i].merchant, expenses[i].amount, expenses[i].category, expenses[i].description, expenses[i].tag, expenses[i].receiptImgLink, expenses[i].status],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 28\n          }\n        }));\n      }\n    }\n\n    if (expenses.length != props.currCardLs.length) {\n      //if statement prevents infinite re-rendering by only changing state when expenses update\n      props.setCardLs(expenseCardList);\n    }\n  }\n\n  var expenses = fetchExpenses(); // populateExpenseCards(expenses);\n\n  fetchListData(expenses);\n\n  function table() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"theader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      class: \"dateli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"statusli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"merchli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }\n    }, \"Merchant\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"amountli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"catli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"descli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }\n    }, \"Description\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"tbody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }\n    }, props.currCardLs != 0 ? props.currCardLs : emptyCardLsContent));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 5\n    }\n  }, filters(), table());\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client/client/src/components/table.js"],"names":["React","ExpenseCard","App","Table","props","expenseCardList","emptyCardLsContent","toggleWindow","fetchListData","expenses","fetchCatList","catList","listData","getCatList","i","length","currExpenseCat","category","includes","push","setCatList","fetchCcList","ccList","getCcList","currExpenseCc","ccData","setCcList","fetchTagList","tagList","getTagList","currExpenseTag","tag","setTagList","fetchAllList","categoriesList","newTagList","newCatList","newCcList","populateSelectList","ls","selectLs","sortByCat","select","document","getElementsByClassName","currCat","sortedExpenses","options","selectedIndex","text","expensesLocal","populateExpenseCards","sortByCC","sortByTag","filters","getCookie","cname","name","decodedCookie","decodeURIComponent","cookie","ca","split","c","charAt","substring","indexOf","fetchExpenses","userEmail","requestOptions","method","headers","body","JSON","stringify","email","data","fetch","then","res","json","catch","error","console","log","numCards","date","merchant","amount","description","receiptImgLink","status","currCardLs","setCardLs","table"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ExpenseCard  from './expense_card';\nimport App from '../App';\nimport './table.css';\n\nconst Table = props => {\n  var expenseCardList =  [];\n  var emptyCardLsContent = <div class=\"emptyCardList\" onClick={props.toggleWindow}>\n                            <h3>Create new expense</h3>\n                          </div>\n\n  async function fetchListData(expenses) {\n    var expenses = await expenses;\n    function fetchCatList(expenses) {\n      var catList = listData().getCatList();\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]){\n            var currExpenseCat = expenses[i].category;\n            if (!catList.includes(currExpenseCat)) {\n              catList.push(currExpenseCat);\n            }\n          }\n        }\n      }\n      if (catList.length > props.catList.length && catList[0]) {\n        //prevents infinite re-rendering\n      props.setCatList(catList)\n      }\n    }\n\n    function fetchCcList(expenses) {\n      var ccList = listData().getCcList();\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]){\n            var currExpenseCc = expenses[i].ccData;\n            if (!ccList.includes(currExpenseCc)) {\n              ccList.push(currExpenseCc);\n            }\n          }\n        }\n      }\n      if (ccList.length > props.ccList && ccList[0]){\n        //prevents infinite re-rendering\n      props.setCcList(ccList)\n    }\n    }\n\n    function fetchTagList(expenses) {\n      var tagList = listData().getTagList();\n      if (expenses) {\n      for (var i = 0; i <= expenses.length; i++) {\n        if (expenses[i]){\n          var currExpenseTag = expenses[i].tag;\n          if (!tagList.includes(currExpenseTag)) {\n            tagList.push(currExpenseTag);\n          }\n        }\n      }\n    }\n    if (tagList.length > props.tagList && tagList[0]){\n      //prevents infinite re-rendering\n      props.setTagList(tagList)\n    }\n  }\n    function fetchAllList(expenses) {\n      fetchCatList(expenses); \n      fetchCcList(expenses); \n      fetchTagList(expenses);\n    }\n    fetchAllList(expenses);\n  }\n\n  function listData (){\n    var tagList = [];\n    var categoriesList = [];\n    var ccList = [];\n\n    return {\n      setTagList : function (newTagList) {\n        tagList = newTagList;\n      },\n      setCatList : function (newCatList) {\n        categoriesList = newCatList;\n      },\n      setCcList : function (newCcList) {\n        ccList = newCcList;\n      },\n      getCatList : function () {\n        return categoriesList;\n      },\n      getCcList : function () {\n        return  ccList;\n      },\n      getTagList : function () {\n        return tagList;\n      }\n    };\n  }\n\n  var populateSelectList = (ls) => {\n    var selectLs = [];\n    for(var i = 0; i < ls.length; i++) {\n      selectLs.push(<option  class=\"selectli\">{ls[i]}</option>)\n    }\n    return selectLs;\n  }\n\n  var sortByCat = async () => {\n    var select = document.getElementsByClassName('catList')[0]\n    var currCat;\n    var sortedExpenses = [];\n    if (select.options) {\n      //gets current selected category\n      currCat = select.options[select.selectedIndex].text\n    }\n    var expensesLocal = await expenses;\n    \n    for (var i = 0; i < expensesLocal.length; i++) {\n      if (expensesLocal[i].category === currCat) {\n        sortedExpenses.push(expensesLocal[i])\n      }\n    }\n    expenseCardList = [];\n    populateExpenseCards(sortedExpenses)\n  }\n\n  var sortByCC = () => {\n    var select = document.getElementsByClassName('ccList')[0]\n  //   if (select.options) {\n  //     var currCC = select.options[select.selectedIndex].text\n  // }\n\n  }\n\n  var sortByTag = () => {\n    var select = document.getElementsByClassName('tagList')[0]\n    // if (select.options) {\n    //   var currTag = select.options[select.selectedIndex].text\n    // }\n\n  }\n\n  function filters () {\n    return(\n          <div className=\"filters\">\n            <ul class=\"datesFiltersList\">\n            <li>\n              <form action=\"\">\n                <label for=\"From\">From: </label>\n                <input type=\"date\" id=\"\" name=\"\"/>\n              </form>\n            </li>\n            <li>\n              <form action=\"\">\n                <label for=\"To\">To: </label>\n                <input type=\"date\" id=\"\" name=\"\"/>\n              </form>\n            </li>\n          </ul>\n          <ul class=\"typeFiltersList\">\n            <li>\n                <label>\n                  <input class=\"merchIn\" type=\"text\" placeholder=\"Merchant\" onChange=\"\" onSubmit=\"\" />\n                </label>\n          </li>\n          </ul>\n          <ul class=\"categoryTagList\">\n            <li>\n              <select class=\"catList\" onChange={sortByCat}>\n              <option value=\"\" disabled selected>Select Category</option>\n                {populateSelectList(props.catList)}\n              </select>\n            </li>\n            <li>\n              <select class=\"ccList\" onChange={sortByCC()}>\n              <option value=\"\" disabled selected>Select Card</option>\n              {populateSelectList(props.ccList)}\n              </select>\n            </li>\n            <li>\n              <select class=\"tagList\" onChange={sortByTag()}>\n              <option value=\"\" disabled selected>Select Tag</option>\n              {populateSelectList(props.tagList)}\n              </select>\n            </li>\n          </ul>\n          <ul class=\"statusList\">\n            <li>\n                <label class=\"c1\">\n                  <input type=\"checkbox\" checked=\"checked\"/>\n                  <span class=\"checkmark\"></span>\n                  Unreported\n                </label>\n            </li>\n            <li>\n              <label class=\"c2\">\n                <input type=\"checkbox\" checked=\"checked\"/>\n                <span class=\"checkmark\"></span>\n                Open\n              </label>\n            </li>\n            <li>\n              <label class=\"c3\">\n                <input type=\"checkbox\" checked=\"checked\"/>\n                <span class=\"checkmark\"></span>\n                Processing\n              </label>\n            </li>\n            <li>\n              <label class=\"c4\">\n                <input type=\"checkbox\" checked=\"checked\"/>\n                <span class=\"checkmark\"></span>\n                Approved\n              </label>\n            </li>\n            <li>\n              <label class=\"c5\">\n                <input type=\"checkbox\" checked=\"checked\"/>\n                <span class=\"checkmark\"></span>\n                Reimbursed\n              </label>\n            </li>\n            <li>\n              <label class=\"c6\">\n                <input type=\"checkbox\" checked=\"checked\"/>\n                <span class=\"checkmark\"></span>\n                Closed\n              </label>\n            </li>\n            <li>\n              <label class=\"c7\">\n                <input type=\"checkbox\"/>\n                <span class=\"checkmark\"></span>\n                Deleted\n              </label>\n            </li> \n          </ul>\n        </div>\n    )\n  }\n\n  var getCookie = cname => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for(var i = 0; i <ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  }\n\n  async function fetchExpenses() {\n    var userEmail = getCookie(\"email\");\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email : userEmail\n      })};\n\n      var data = await fetch('https://api.expensey.app/users/expenses',requestOptions) \n          .then(res => res.json())\n          .then (data => \n            {\n              return data\n            })\n          .catch(error => console.log(error));\n\n      return data\n      }\n\nasync function populateExpenseCards (expenses) {\n  var expenses = await expenses;\n  if (expenses) {\n    var numCards = expenses.length;\n    for (var i = 0; i < numCards; i++) {\n      expenseCardList.push(<ExpenseCard data = {[expenses[i].date, expenses[i].merchant, expenses[i].amount, expenses[i].category,expenses[i].description, expenses[i].tag, expenses[i].receiptImgLink, expenses[i].status]}/>)\n    }\n  }\n  if (expenses.length != props.currCardLs.length){\n    //if statement prevents infinite re-rendering by only changing state when expenses update\n    props.setCardLs(expenseCardList);\n  }\n  \n  }\n\n  var expenses = fetchExpenses();\n  // populateExpenseCards(expenses);\n  fetchListData(expenses);\n\n  function table (){\n    return(\n      <div class=\"table\">\n        <ul class=\"theader\">\n          <li class=\"dateli\">Date</li>\n          <li class=\"statusli\">Status</li>\n          <li class=\"merchli\">Merchant</li>\n          <li class=\"amountli\">Amount</li>\n          <li class=\"catli\">Category</li>\n          <li class=\"descli\">Description</li>\n        </ul>\n        <div class=\"tbody\">\n        {(props.currCardLs != 0) ? props.currCardLs : emptyCardLsContent }\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {filters()}\n      {table()}\n    </div>\n  )\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}