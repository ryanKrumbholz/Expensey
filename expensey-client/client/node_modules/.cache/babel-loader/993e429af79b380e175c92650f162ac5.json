{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client/client/src/components/table.js\";\nimport React from 'react';\nimport ExpenseCard from './expense_card';\nimport App from '../App';\nimport './table.css';\n\nconst Table = props => {\n  var expenseCardList = [];\n  var emptyCardLsContent = /*#__PURE__*/React.createElement(\"div\", {\n    class: \"emptyCardList\",\n    onClick: props.toggleWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 29\n    }\n  }, \"Create new expense\"));\n\n  async function fetchListData(expenses) {\n    var expenses = await expenses;\n\n    function fetchCatList(expenses) {\n      var catList = listData().getCatList();\n\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]) {\n            var currExpenseCat = expenses[i].category;\n\n            if (!catList.includes(currExpenseCat)) {\n              catList.push(currExpenseCat);\n            }\n          }\n        }\n      }\n\n      if (catList.length > props.catList.length && catList[0]) {\n        //prevents infinite re-rendering\n        props.setCatList(catList);\n      }\n    }\n\n    function fetchCcList(expenses) {\n      var ccList = listData().getCcList();\n\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]) {\n            var currExpenseCc = expenses[i].ccData;\n\n            if (!ccList.includes(currExpenseCc)) {\n              ccList.push(currExpenseCc);\n            }\n          }\n        }\n      }\n\n      if (ccList.length > props.ccList && ccList[0]) {\n        //prevents infinite re-rendering\n        props.setCcList(ccList);\n      }\n    }\n\n    function fetchTagList(expenses) {\n      var tagList = listData().getTagList();\n\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]) {\n            var currExpenseTags = expenses[i].tags;\n\n            if (!tagList.includes(currExpenseTags)) {\n              console.log(currExpenseTags);\n              tagList.concat(currExpenseTags);\n              console.log(tagList);\n            }\n          }\n        }\n      }\n\n      if (tagList.length > props.tagList && tagList[0]) {\n        //prevents infinite re-rendering\n        props.setTagList(tagList);\n      }\n    }\n\n    function fetchAllList(expenses) {\n      fetchCatList(expenses);\n      fetchCcList(expenses);\n      fetchTagList(expenses);\n    }\n\n    fetchAllList(expenses);\n  }\n\n  function listData() {\n    var tagList = [];\n    var categoriesList = [];\n    var ccList = [];\n    return {\n      setTagList: function (newTagList) {\n        tagList = newTagList;\n      },\n      setCatList: function (newCatList) {\n        categoriesList = newCatList;\n      },\n      setCcList: function (newCcList) {\n        ccList = newCcList;\n      },\n      getCatList: function () {\n        return categoriesList;\n      },\n      getCcList: function () {\n        return ccList;\n      },\n      getTagList: function () {\n        return tagList;\n      }\n    };\n  }\n\n  var populateSelectList = ls => {\n    var selectLs = [];\n\n    for (var i = 0; i < ls.length; i++) {\n      selectLs.push( /*#__PURE__*/React.createElement(\"option\", {\n        class: \"selectli\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, ls[i]));\n    }\n\n    return selectLs;\n  };\n\n  var sortByCat = async () => {\n    function helper() {\n      //sorts through expenses and pushes applicable expense to cardLs\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].category === currCat) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n      }\n    }\n\n    var select = document.getElementsByClassName('catList')[0];\n    var currCat;\n    var sortedExpenses = [];\n\n    if (select.options) {\n      //gets current selected category\n      currCat = select.options[select.selectedIndex].text;\n    }\n\n    var expensesLocal = await props.expenses;\n    helper();\n\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper();\n    }\n\n    expenseCardList = [];\n\n    if (currCat === 'Select Category') {\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses);\n    } else {\n      populateExpenseCards(sortedExpenses);\n    }\n\n    props.setExpenses(sortedExpenses);\n  };\n\n  var sortByCC = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].ccData === currCC) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n      }\n    }\n\n    var select = document.getElementsByClassName('ccList')[0];\n    var currCC;\n    var sortedExpenses = [];\n\n    if (select.options) {\n      currCC = select.options[select.selectedIndex].text;\n    }\n\n    var expensesLocal = await props.expenses;\n    helper();\n\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper();\n    }\n\n    expenseCardList = [];\n\n    if (currCC === 'Select Category') {\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses);\n    } else {\n      populateExpenseCards(sortedExpenses);\n    }\n\n    props.setExpenses(sortedExpenses);\n  };\n\n  var sortByTag = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].tag === currTag) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n      }\n    }\n\n    var select = document.getElementsByClassName('tagList')[0];\n    var currTag;\n    var sortedExpenses = [];\n\n    if (select.options) {\n      currTag = select.options[select.selectedIndex].text;\n    }\n\n    var expensesLocal = await props.expenses;\n    helper();\n\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper();\n    }\n\n    expenseCardList = [];\n\n    if (currTag === 'Select Tag') {\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses);\n    } else {\n      populateExpenseCards(sortedExpenses);\n    }\n\n    props.setExpenses(sortedExpenses);\n  };\n\n  var sortByMerch = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].merchant.toUpperCase() === input.toUpperCase()) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n      }\n    }\n\n    var input = document.getElementsByClassName('merchIn')[0].value;\n    var sortedExpenses = [];\n    var expensesLocal = await props.expenses;\n    helper();\n\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper();\n    }\n\n    expenseCardList = [];\n\n    if (input === '') {\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses);\n    } else {\n      populateExpenseCards(sortedExpenses);\n    }\n\n    props.setExpenses(sortedExpenses);\n  };\n\n  var sortByDate = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].dateNum >= lowerBound || expensesLocal[i].dateNum <= upperBound) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n      }\n    }\n\n    var lowerBound = document.getElementsByClassName('dateFrom')[0].valueAsNumber;\n    var upperBound = document.getElementsByClassName('dateTo')[0].valueAsNumber;\n    var sortedExpenses = [];\n    var expensesLocal = await props.expenses;\n    helper();\n\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper();\n    }\n\n    populateExpenseCards(sortedExpenses);\n    props.setExpenses(sortedExpenses);\n  };\n\n  var sortByStatus = async () => {\n    //TODO need to finish this function\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].status == unreported && props.c1 == false) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n\n        if (expensesLocal[i].status === open && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n\n        if (expensesLocal[i].status === processing && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n\n        if (expensesLocal[i].status === approved && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n\n        if (expensesLocal[i].status === reimbursed && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n\n        if (expensesLocal[i].status === closed && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n\n        if (expensesLocal[i].status === deleted && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i]);\n        }\n      }\n    }\n\n    var sortedExpenses = [];\n    var expensesLocal = await props.expenses;\n    var unreported = document.getElementsByClassName('c1')[0].text;\n    var open = document.getElementsByClassName('c2')[0].text;\n    var processing = document.getElementsByClassName('c3')[0].text;\n    var approved = document.getElementsByClassName('c4')[0].text;\n    var reimbursed = document.getElementsByClassName('c5')[0].text;\n    var closed = document.getElementsByClassName('c6')[0].text;\n    var deleted = document.getElementsByClassName('c7')[0].text;\n    helper();\n\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper();\n    }\n\n    populateExpenseCards(sortedExpenses);\n    props.setExpenses(sortedExpenses);\n  };\n\n  function filters() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"datesFiltersList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"From\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    }, \"From: \"), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"dateFrom\",\n      type: \"date\",\n      id: \"\",\n      name: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"To\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }\n    }, \"To: \"), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"dateTo\",\n      type: \"date\",\n      id: \"\",\n      name: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"submit\",\n      onClick: sortByDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"typeFiltersList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      class: \"merchIn\",\n      type: \"text\",\n      placeholder: \"Merchant\",\n      onChange: \"\",\n      onSubmit: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"submit\",\n      onClick: sortByMerch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"categoryTagList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      class: \"catList\",\n      onChange: sortByCat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 15\n      }\n    }, \"Select Category\"), populateSelectList(props.catList))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      class: \"ccList\",\n      onChange: sortByCC,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 15\n      }\n    }, \"Select Card\"), populateSelectList(props.ccList))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      class: \"tagList\",\n      onChange: sortByTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 15\n      }\n    }, \"Select Tag\"), populateSelectList(props.tagList)))), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"statusList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: props.c1,\n      onClick: props.togglec1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 19\n      }\n    }), \"Unreported\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: props.c2,\n      onClick: props.togglec2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }\n    }), \"Open\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: props.c3,\n      onClick: props.togglec3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }\n    }), \"Processing\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: props.c4,\n      onClick: props.togglec4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }\n    }), \"Approved\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: props.c5,\n      onClick: props.togglec5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }\n    }), \"Reimbursed\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: props.c6,\n      onClick: props.togglec6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }\n    }), \"Closed\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: props.c7,\n      onClick: props.togglec7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }\n    }), \"Deleted\"))));\n  }\n\n  var getCookie = cname => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n\n    return \"\";\n  };\n\n  async function fetchExpenses() {\n    var userEmail = getCookie(\"email\");\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: userEmail\n      })\n    };\n    var data = await fetch('https://api.expensey.app/users/expenses', requestOptions).then(res => res.json()).then(data => {\n      return data;\n    }).catch(error => console.log(error));\n    return data;\n  }\n\n  async function populateExpenseCards(expenses) {\n    var expenses = await expenses;\n\n    if (expenses) {\n      var numCards = expenses.length;\n\n      for (var i = 0; i < numCards; i++) {\n        var arr = expenses[i].date.split('-');\n        var date = arr[1] + '-' + arr[2] + '-' + arr[0];\n        expenseCardList.push( /*#__PURE__*/React.createElement(ExpenseCard, {\n          data: [date, expenses[i].merchant, expenses[i].amount, expenses[i].category, expenses[i].description, expenses[i].tag, expenses[i].receiptImgLink, expenses[i].status],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 28\n          }\n        }));\n      }\n    }\n\n    if (expenseCardList != props.currCardLs) {\n      //if statement prevents infinite re-rendering by only changing state when expenses update\n      props.setCardLs(expenseCardList);\n    }\n  }\n\n  var expenses = fetchExpenses();\n\n  if (props.expenses.length == 0) {\n    props.setExpenses(expenses);\n  }\n\n  if (props.currCardLs.length == 0) {\n    populateExpenseCards(expenses);\n  }\n\n  fetchListData(expenses);\n\n  function table() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"theader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      class: \"dateli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"statusli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"merchli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }\n    }, \"Merchant\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"amountli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 11\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"catli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"descli\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }\n    }, \"Description\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"tbody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }\n    }, props.currCardLs != 0 ? props.currCardLs : emptyCardLsContent));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 5\n    }\n  }, filters(), table());\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/ryankrumbholz/OneDrive/development/expensey/expensey-client/client/src/components/table.js"],"names":["React","ExpenseCard","App","Table","props","expenseCardList","emptyCardLsContent","toggleWindow","fetchListData","expenses","fetchCatList","catList","listData","getCatList","i","length","currExpenseCat","category","includes","push","setCatList","fetchCcList","ccList","getCcList","currExpenseCc","ccData","setCcList","fetchTagList","tagList","getTagList","currExpenseTags","tags","console","log","concat","setTagList","fetchAllList","categoriesList","newTagList","newCatList","newCcList","populateSelectList","ls","selectLs","sortByCat","helper","expensesLocal","currCat","sortedExpenses","select","document","getElementsByClassName","options","selectedIndex","text","populateExpenseCards","setExpenses","sortByCC","currCC","sortByTag","tag","currTag","sortByMerch","merchant","toUpperCase","input","value","sortByDate","dateNum","lowerBound","upperBound","valueAsNumber","sortByStatus","status","unreported","c1","open","processing","approved","reimbursed","closed","deleted","filters","togglec1","c2","togglec2","c3","togglec3","c4","togglec4","c5","togglec5","c6","togglec6","c7","togglec7","getCookie","cname","name","decodedCookie","decodeURIComponent","cookie","ca","split","c","charAt","substring","indexOf","fetchExpenses","userEmail","requestOptions","method","headers","body","JSON","stringify","email","data","fetch","then","res","json","catch","error","numCards","arr","date","amount","description","receiptImgLink","currCardLs","setCardLs","table"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ExpenseCard  from './expense_card';\nimport App from '../App';\nimport './table.css';\n\nconst Table = props => {\n  var expenseCardList =  [];\n  var emptyCardLsContent = <div class=\"emptyCardList\" onClick={props.toggleWindow}>\n                            <h3>Create new expense</h3>\n                          </div>\n\n  async function fetchListData(expenses) {\n    var expenses = await expenses;\n    function fetchCatList(expenses) {\n      var catList = listData().getCatList();\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]){\n            var currExpenseCat = expenses[i].category;\n            if (!catList.includes(currExpenseCat)) {\n              catList.push(currExpenseCat);\n            }\n          }\n        }\n      }\n      if (catList.length > props.catList.length && catList[0]) {\n        //prevents infinite re-rendering\n      props.setCatList(catList)\n      }\n    }\n\n    function fetchCcList(expenses) {\n      var ccList = listData().getCcList();\n      if (expenses) {\n        for (var i = 0; i <= expenses.length; i++) {\n          if (expenses[i]){\n            var currExpenseCc = expenses[i].ccData;\n            if (!ccList.includes(currExpenseCc)) {\n              ccList.push(currExpenseCc);\n            }\n          }\n        }\n      }\n      if (ccList.length > props.ccList && ccList[0]){\n        //prevents infinite re-rendering\n      props.setCcList(ccList)\n    }\n    }\n\n    function fetchTagList(expenses) {\n      var tagList = listData().getTagList();\n      if (expenses) {\n      for (var i = 0; i <= expenses.length; i++) {\n        if (expenses[i]){\n          var currExpenseTags = expenses[i].tags;\n          if (!tagList.includes(currExpenseTags)) {\n            console.log(currExpenseTags)\n            tagList.concat(currExpenseTags);\n            console.log(tagList)\n          }\n        }\n      }\n    }\n    if (tagList.length > props.tagList && tagList[0]){\n      //prevents infinite re-rendering\n      props.setTagList(tagList)\n    }\n  }\n    function fetchAllList(expenses) {\n      fetchCatList(expenses); \n      fetchCcList(expenses); \n      fetchTagList(expenses);\n    }\n    fetchAllList(expenses);\n  }\n\n  function listData (){\n    var tagList = [];\n    var categoriesList = [];\n    var ccList = [];\n\n    return {\n      setTagList : function (newTagList) {\n        tagList = newTagList;\n      },\n      setCatList : function (newCatList) {\n        categoriesList = newCatList;\n      },\n      setCcList : function (newCcList) {\n        ccList = newCcList;\n      },\n      getCatList : function () {\n        return categoriesList;\n      },\n      getCcList : function () {\n        return  ccList;\n      },\n      getTagList : function () {\n        return tagList;\n      }\n    };\n  }\n\n  var populateSelectList = (ls) => {\n    var selectLs = [];\n    for(var i = 0; i < ls.length; i++) {\n      selectLs.push(<option  class=\"selectli\">{ls[i]}</option>)\n    }\n    return selectLs;\n  }\n\n  var sortByCat = async () => {\n    function helper() {\n      //sorts through expenses and pushes applicable expense to cardLs\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].category === currCat) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n\n    var select = document.getElementsByClassName('catList')[0]\n    var currCat;\n    var sortedExpenses = [];\n    if (select.options) {\n      //gets current selected category\n      currCat = select.options[select.selectedIndex].text\n    }\n    var expensesLocal = await props.expenses;\n\n    helper()\n    \n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper()\n    }\n    expenseCardList = [];\n\n    if (currCat === 'Select Category'){\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses)\n    }\n    else{\n      populateExpenseCards(sortedExpenses)\n    }\n    props.setExpenses(sortedExpenses)\n  }\n\n  var sortByCC = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].ccData === currCC) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n\n    var select = document.getElementsByClassName('ccList')[0]\n    var currCC;\n    var sortedExpenses = [];\n      if (select.options) {\n        currCC = select.options[select.selectedIndex].text\n      }\n\n      var expensesLocal = await props.expenses;\n    \n      helper()\n    \n      if (sortedExpenses.length == 0) {\n        expensesLocal = await expenses;\n        helper()\n      }\n\n    expenseCardList = [];\n\n    if (currCC === 'Select Category'){\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses)\n    }\n    else{\n      populateExpenseCards(sortedExpenses)\n    }\n    props.setExpenses(sortedExpenses)\n  }\n\n  var sortByTag = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].tag === currTag) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n    var select = document.getElementsByClassName('tagList')[0]\n    var currTag;\n    var sortedExpenses = [];\n    if (select.options) {\n      currTag = select.options[select.selectedIndex].text\n    }\n    var expensesLocal = await props.expenses;\n    \n    helper()\n    \n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper()\n    }\n    \n    expenseCardList = [];\n\n    if (currTag === 'Select Tag'){\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses)\n    }\n    else{\n      populateExpenseCards(sortedExpenses)\n    }\n    props.setExpenses(sortedExpenses)\n  }\n\n  var sortByMerch = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].merchant.toUpperCase() === input.toUpperCase()) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n    var input = document.getElementsByClassName('merchIn')[0].value\n    var sortedExpenses = [];\n    var expensesLocal = await props.expenses;\n    \n    helper()\n    \n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper()\n    }\n\n    expenseCardList = [];\n\n    if (input === ''){\n      //resets back to full list of expenses when default option selected\n      populateExpenseCards(expenses)\n    }\n    else{\n      populateExpenseCards(sortedExpenses)\n    }\n    props.setExpenses(sortedExpenses)\n  }\n\n  var sortByDate = async () => {\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if (expensesLocal[i].dateNum >= lowerBound || expensesLocal[i].dateNum <= upperBound) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n    var lowerBound = document.getElementsByClassName('dateFrom')[0].valueAsNumber\n    var upperBound = document.getElementsByClassName('dateTo')[0].valueAsNumber\n    var sortedExpenses = [];\n    var expensesLocal = await props.expenses;\n\n    helper()\n\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper()\n    }\n\n    populateExpenseCards(sortedExpenses)\n    props.setExpenses(sortedExpenses)\n\n  }\n\n  var sortByStatus = async () => {\n    //TODO need to finish this function\n    function helper() {\n      for (var i = 0; i < expensesLocal.length; i++) {\n        if(expensesLocal[i].status == unreported && props.c1 == false) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n        if(expensesLocal[i].status === open && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n        if(expensesLocal[i].status === processing && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n        if(expensesLocal[i].status === approved && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n        if(expensesLocal[i].status === reimbursed && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n        if(expensesLocal[i].status === closed && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n        if(expensesLocal[i].status === deleted && this.c1 === false) {\n          sortedExpenses.push(expensesLocal[i])\n        }\n      }\n    }\n\n    var sortedExpenses = [];\n    var expensesLocal = await props.expenses;\n    var unreported = document.getElementsByClassName('c1')[0].text\n    var open = document.getElementsByClassName('c2')[0].text\n    var processing = document.getElementsByClassName('c3')[0].text\n    var approved = document.getElementsByClassName('c4')[0].text\n    var reimbursed = document.getElementsByClassName('c5')[0].text\n    var closed = document.getElementsByClassName('c6')[0].text\n    var deleted = document.getElementsByClassName('c7')[0].text\n\n    helper()\n    if (sortedExpenses.length == 0) {\n      expensesLocal = await expenses;\n      helper()\n    }\n    populateExpenseCards(sortedExpenses)\n    props.setExpenses(sortedExpenses)\n  }\n\n  function filters () {\n    return(\n          <div className=\"filters\">\n            <ul class=\"datesFiltersList\">\n            <li>\n              <form action=\"\">\n                <label for=\"From\">From: </label>\n                <input class=\"dateFrom\" type=\"date\" id=\"\" name=\"\"/>\n              </form>\n            </li>\n            <li>\n              <form action=\"\">\n                <label for=\"To\">To: </label>\n                <input class=\"dateTo\" type=\"date\" id=\"\" name=\"\"/>\n              </form>\n              <button class=\"submit\" onClick={sortByDate}></button>\n            </li>\n          </ul>\n          <ul class=\"typeFiltersList\">\n            <li>\n                <label>\n                  <input class=\"merchIn\" type=\"text\" placeholder=\"Merchant\" onChange=\"\" onSubmit=\"\" />\n                  <button class=\"submit\" onClick={sortByMerch}></button>\n                </label>\n          </li>\n          </ul>\n          <ul class=\"categoryTagList\">\n            <li>\n              <select class=\"catList\" onChange={sortByCat}>\n              <option value=\"\" selected>Select Category</option>\n                {populateSelectList(props.catList)}\n              </select>\n            </li>\n            <li>\n              <select class=\"ccList\" onChange={sortByCC}>\n              <option value=\"\" selected>Select Card</option>\n              {populateSelectList(props.ccList)}\n              </select>\n            </li>\n            <li>\n              <select class=\"tagList\" onChange={sortByTag}>\n              <option value=\"\" selected>Select Tag</option>\n              {populateSelectList(props.tagList)}\n              </select>\n            </li>\n          </ul>\n          <ul class=\"statusList\">\n            <li>\n                <label class=\"c1\">\n                  <input type=\"checkbox\" checked={props.c1} onClick={props.togglec1}/>\n                  Unreported\n                </label>\n            </li>\n            <li>\n              <label class=\"c2\">\n                <input type=\"checkbox\" checked={props.c2} onClick={props.togglec2}/>\n                Open\n              </label>\n            </li>\n            <li>\n              <label class=\"c3\">\n                <input type=\"checkbox\" checked={props.c3} onClick={props.togglec3}/>\n                Processing\n              </label>\n            </li>\n            <li>\n              <label class=\"c4\">\n                <input type=\"checkbox\" checked={props.c4} onClick={props.togglec4}/>\n                Approved\n              </label>\n            </li>\n            <li>\n              <label class=\"c5\">\n                <input type=\"checkbox\" checked={props.c5} onClick={props.togglec5}/>\n                Reimbursed\n              </label>\n            </li>\n            <li>\n              <label class=\"c6\">\n                <input type=\"checkbox\" checked={props.c6} onClick={props.togglec6}/>\n                Closed\n              </label>\n            </li>\n            <li>\n              <label class=\"c7\">\n                <input type=\"checkbox\" checked={props.c7} onClick={props.togglec7}/>\n                Deleted\n              </label>\n            </li> \n          </ul>\n        </div>\n    )\n  }\n\n  var getCookie = cname => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for(var i = 0; i <ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  }\n\n  async function fetchExpenses() {\n    var userEmail = getCookie(\"email\");\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email : userEmail\n      })};\n\n      var data = await fetch('https://api.expensey.app/users/expenses',requestOptions) \n          .then(res => res.json())\n          .then (data => \n            {\n              return data\n            })\n          .catch(error => console.log(error));\n\n      return data\n      }\n\nasync function populateExpenseCards (expenses) {\n  var expenses = await expenses;\n  if (expenses) {\n    var numCards = expenses.length;\n    for (var i = 0; i < numCards; i++) {\n      var arr = expenses[i].date.split('-')\n      var date = arr[1] + '-' + arr[2] + '-' + arr[0]\n      expenseCardList.push(<ExpenseCard data = {[date, expenses[i].merchant, expenses[i].amount,\n       expenses[i].category,expenses[i].description, expenses[i].tag, expenses[i].receiptImgLink, expenses[i].status]}/>)\n    }\n  }\n  if (expenseCardList != props.currCardLs){\n    //if statement prevents infinite re-rendering by only changing state when expenses update\n    props.setCardLs(expenseCardList);\n  }\n  \n  }\n\n  var expenses = fetchExpenses();\n  \n  if (props.expenses.length == 0) {\n    props.setExpenses(expenses);\n  }\n\n  if (props.currCardLs.length == 0) {\n    populateExpenseCards(expenses);\n  }\n\n  fetchListData(expenses);\n\n  function table (){\n    return(\n      <div class=\"table\">\n        <ul class=\"theader\">\n          <li class=\"dateli\">Date</li>\n          <li class=\"statusli\">Status</li>\n          <li class=\"merchli\">Merchant</li>\n          <li class=\"amountli\">Amount</li>\n          <li class=\"catli\">Category</li>\n          <li class=\"descli\">Description</li>\n        </ul>\n        <div class=\"tbody\">\n        {(props.currCardLs != 0) ? props.currCardLs : emptyCardLsContent }\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {filters()}\n      {table()}\n    </div>\n  )\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}